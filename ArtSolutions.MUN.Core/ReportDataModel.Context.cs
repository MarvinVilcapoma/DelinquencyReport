//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArtSolutions.MUN.Core
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ReportDataModelContainer : DbContext
    {
        public ReportDataModelContainer()
            : base("name=ReportDataModelContainer")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<MUNSERREPIVUBalanceSheet_Result> MUNSERREPIVUBalanceSheet(Nullable<int> companyID, Nullable<System.DateTime> startPeriod, Nullable<System.DateTime> endPeriod, string accountIDs, Nullable<decimal> rangeFrom, Nullable<decimal> rangeTo, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startPeriodParameter = startPeriod.HasValue ?
                new ObjectParameter("StartPeriod", startPeriod) :
                new ObjectParameter("StartPeriod", typeof(System.DateTime));
    
            var endPeriodParameter = endPeriod.HasValue ?
                new ObjectParameter("EndPeriod", endPeriod) :
                new ObjectParameter("EndPeriod", typeof(System.DateTime));
    
            var accountIDsParameter = accountIDs != null ?
                new ObjectParameter("AccountIDs", accountIDs) :
                new ObjectParameter("AccountIDs", typeof(string));
    
            var rangeFromParameter = rangeFrom.HasValue ?
                new ObjectParameter("RangeFrom", rangeFrom) :
                new ObjectParameter("RangeFrom", typeof(decimal));
    
            var rangeToParameter = rangeTo.HasValue ?
                new ObjectParameter("RangeTo", rangeTo) :
                new ObjectParameter("RangeTo", typeof(decimal));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPIVUBalanceSheet_Result>("MUNSERREPIVUBalanceSheet", companyIDParameter, startPeriodParameter, endPeriodParameter, accountIDsParameter, rangeFromParameter, rangeToParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPIVUFormsNotFiled_Result> MUNSERREPIVUFormsNotFiled(Nullable<int> companyID, string accountIDs, Nullable<int> sinceMonth, Nullable<int> sinceYear, Nullable<int> tillMonth, Nullable<int> tilleYear, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            var accountIDsParameter = accountIDs != null ?
                new ObjectParameter("accountIDs", accountIDs) :
                new ObjectParameter("accountIDs", typeof(string));
    
            var sinceMonthParameter = sinceMonth.HasValue ?
                new ObjectParameter("sinceMonth", sinceMonth) :
                new ObjectParameter("sinceMonth", typeof(int));
    
            var sinceYearParameter = sinceYear.HasValue ?
                new ObjectParameter("sinceYear", sinceYear) :
                new ObjectParameter("sinceYear", typeof(int));
    
            var tillMonthParameter = tillMonth.HasValue ?
                new ObjectParameter("tillMonth", tillMonth) :
                new ObjectParameter("tillMonth", typeof(int));
    
            var tilleYearParameter = tilleYear.HasValue ?
                new ObjectParameter("tilleYear", tilleYear) :
                new ObjectParameter("tilleYear", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPIVUFormsNotFiled_Result>("MUNSERREPIVUFormsNotFiled", companyIDParameter, accountIDsParameter, sinceMonthParameter, sinceYearParameter, tillMonthParameter, tilleYearParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPReceiptRegister_Result> MUNSERREPReceiptRegister(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, string commaSeperatedCashierIds, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var commaSeperatedCashierIdsParameter = commaSeperatedCashierIds != null ?
                new ObjectParameter("CommaSeperatedCashierIds", commaSeperatedCashierIds) :
                new ObjectParameter("CommaSeperatedCashierIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPReceiptRegister_Result>("MUNSERREPReceiptRegister", companyIDParameter, startDateParameter, endDateParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, commaSeperatedCashierIdsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPIVUStatement_Result> MUNSERREPIVUStatement(Nullable<int> companyId, Nullable<int> accountId, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPIVUStatement_Result>("MUNSERREPIVUStatement", companyIdParameter, accountIdParameter, balanceFromParameter, balanceToParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPReceiptVoid_Result> MUNSERREPReceiptVoid(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, string commaSeperatedCashierIds, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var commaSeperatedCashierIdsParameter = commaSeperatedCashierIds != null ?
                new ObjectParameter("CommaSeperatedCashierIds", commaSeperatedCashierIds) :
                new ObjectParameter("CommaSeperatedCashierIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPReceiptVoid_Result>("MUNSERREPReceiptVoid", companyIDParameter, startDateParameter, endDateParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, commaSeperatedCashierIdsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPReceiptBusinessLicense_Result> MUNSERREPReceiptBusinessLicense(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, string commaSeperatedCashierIds, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var commaSeperatedCashierIdsParameter = commaSeperatedCashierIds != null ?
                new ObjectParameter("CommaSeperatedCashierIds", commaSeperatedCashierIds) :
                new ObjectParameter("CommaSeperatedCashierIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPReceiptBusinessLicense_Result>("MUNSERREPReceiptBusinessLicense", companyIDParameter, startDateParameter, endDateParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, commaSeperatedCashierIdsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPReceiptPaymentPlan_Result> MUNSERREPReceiptPaymentPlan(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, string commaSeperatedCashierIds, string commaSeperatedPaymentPlanIds, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var commaSeperatedCashierIdsParameter = commaSeperatedCashierIds != null ?
                new ObjectParameter("CommaSeperatedCashierIds", commaSeperatedCashierIds) :
                new ObjectParameter("CommaSeperatedCashierIds", typeof(string));
    
            var commaSeperatedPaymentPlanIdsParameter = commaSeperatedPaymentPlanIds != null ?
                new ObjectParameter("CommaSeperatedPaymentPlanIds", commaSeperatedPaymentPlanIds) :
                new ObjectParameter("CommaSeperatedPaymentPlanIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPReceiptPaymentPlan_Result>("MUNSERREPReceiptPaymentPlan", companyIDParameter, startDateParameter, endDateParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, commaSeperatedCashierIdsParameter, commaSeperatedPaymentPlanIdsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPBusinessLicenseStatement_Result> MUNSERREPBusinessLicenseStatement(Nullable<int> companyId, Nullable<int> accountId, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPBusinessLicenseStatement_Result>("MUNSERREPBusinessLicenseStatement", companyIdParameter, accountIdParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPReceiptOtherConcept_Result> MUNSERREPReceiptOtherConcept(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, string commaSeperatedCashierIds, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var commaSeperatedCashierIdsParameter = commaSeperatedCashierIds != null ?
                new ObjectParameter("CommaSeperatedCashierIds", commaSeperatedCashierIds) :
                new ObjectParameter("CommaSeperatedCashierIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPReceiptOtherConcept_Result>("MUNSERREPReceiptOtherConcept", companyIDParameter, startDateParameter, endDateParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, commaSeperatedCashierIdsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPReceiptCommercialFacilitiesRental_Result> MUNSERREPReceiptCommercialFacilitiesRental(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, string commaSeperatedCashierIds, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var commaSeperatedCashierIdsParameter = commaSeperatedCashierIds != null ?
                new ObjectParameter("CommaSeperatedCashierIds", commaSeperatedCashierIds) :
                new ObjectParameter("CommaSeperatedCashierIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPReceiptCommercialFacilitiesRental_Result>("MUNSERREPReceiptCommercialFacilitiesRental", companyIDParameter, startDateParameter, endDateParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, commaSeperatedCashierIdsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPReceiptIVU_Result> MUNSERREPReceiptIVU(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, string commaSeperatedCashierIds, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var commaSeperatedCashierIdsParameter = commaSeperatedCashierIds != null ?
                new ObjectParameter("CommaSeperatedCashierIds", commaSeperatedCashierIds) :
                new ObjectParameter("CommaSeperatedCashierIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPReceiptIVU_Result>("MUNSERREPReceiptIVU", companyIDParameter, startDateParameter, endDateParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, commaSeperatedCashierIdsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPBusinessLicenceCreditBalance_Result> MUNSERREPBusinessLicenceCreditBalance(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPBusinessLicenceCreditBalance_Result>("MUNSERREPBusinessLicenceCreditBalance", companyIDParameter, startDateParameter, endDateParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPIVUCollectionDetail_Result> MUNSERREPIVUCollectionDetail(Nullable<int> companyId, Nullable<System.DateTime> startPeriod, Nullable<System.DateTime> endPeriod, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var startPeriodParameter = startPeriod.HasValue ?
                new ObjectParameter("StartPeriod", startPeriod) :
                new ObjectParameter("StartPeriod", typeof(System.DateTime));
    
            var endPeriodParameter = endPeriod.HasValue ?
                new ObjectParameter("EndPeriod", endPeriod) :
                new ObjectParameter("EndPeriod", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPIVUCollectionDetail_Result>("MUNSERREPIVUCollectionDetail", companyIdParameter, startPeriodParameter, endPeriodParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPBusinessLicenceFilingByFiling_Result> MUNSERREPBusinessLicenceFilingByFiling(Nullable<int> companyId, Nullable<System.DateTime> startPeriod, Nullable<System.DateTime> endPeriod, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var startPeriodParameter = startPeriod.HasValue ?
                new ObjectParameter("StartPeriod", startPeriod) :
                new ObjectParameter("StartPeriod", typeof(System.DateTime));
    
            var endPeriodParameter = endPeriod.HasValue ?
                new ObjectParameter("EndPeriod", endPeriod) :
                new ObjectParameter("EndPeriod", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPBusinessLicenceFilingByFiling_Result>("MUNSERREPBusinessLicenceFilingByFiling", companyIdParameter, startPeriodParameter, endPeriodParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNACCJournalGet_Result> MUNACCJournalGet(Nullable<int> companyID, string locale, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string documentTypeID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var documentTypeIDParameter = documentTypeID != null ?
                new ObjectParameter("DocumentTypeID", documentTypeID) :
                new ObjectParameter("DocumentTypeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNACCJournalGet_Result>("MUNACCJournalGet", companyIDParameter, localeParameter, startDateParameter, endDateParameter, documentTypeIDParameter);
        }
    
        public virtual ObjectResult<MUNSERREPReceiptPermissionFees_Result> MUNSERREPReceiptPermissionFees(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, string commaSeperatedCashierIDs, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var commaSeperatedCashierIDsParameter = commaSeperatedCashierIDs != null ?
                new ObjectParameter("CommaSeperatedCashierIDs", commaSeperatedCashierIDs) :
                new ObjectParameter("CommaSeperatedCashierIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPReceiptPermissionFees_Result>("MUNSERREPReceiptPermissionFees", companyIDParameter, startDateParameter, endDateParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, commaSeperatedCashierIDsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPReceiptPermissionExpenses_Result> MUNSERREPReceiptPermissionExpenses(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, string commaSeperatedCashierIDs, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var commaSeperatedCashierIDsParameter = commaSeperatedCashierIDs != null ?
                new ObjectParameter("CommaSeperatedCashierIDs", commaSeperatedCashierIDs) :
                new ObjectParameter("CommaSeperatedCashierIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPReceiptPermissionExpenses_Result>("MUNSERREPReceiptPermissionExpenses", companyIDParameter, startDateParameter, endDateParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, commaSeperatedCashierIDsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPReceiptStreetVendors_Result> MUNSERREPReceiptStreetVendors(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, string commaSeperatedCashierIDs, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var commaSeperatedCashierIDsParameter = commaSeperatedCashierIDs != null ?
                new ObjectParameter("CommaSeperatedCashierIDs", commaSeperatedCashierIDs) :
                new ObjectParameter("CommaSeperatedCashierIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPReceiptStreetVendors_Result>("MUNSERREPReceiptStreetVendors", companyIDParameter, startDateParameter, endDateParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, commaSeperatedCashierIDsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPReceiptBank_Result> MUNSERREPReceiptBank(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, string commaSeperatedBankAccountIds, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var commaSeperatedBankAccountIdsParameter = commaSeperatedBankAccountIds != null ?
                new ObjectParameter("CommaSeperatedBankAccountIds", commaSeperatedBankAccountIds) :
                new ObjectParameter("CommaSeperatedBankAccountIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPReceiptBank_Result>("MUNSERREPReceiptBank", companyIDParameter, startDateParameter, endDateParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, commaSeperatedBankAccountIdsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPSecuritiesByBank_Result> MUNSERREPSecuritiesByBank(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, string commaSeperatedBankAccountIds, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var commaSeperatedBankAccountIdsParameter = commaSeperatedBankAccountIds != null ?
                new ObjectParameter("CommaSeperatedBankAccountIds", commaSeperatedBankAccountIds) :
                new ObjectParameter("CommaSeperatedBankAccountIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPSecuritiesByBank_Result>("MUNSERREPSecuritiesByBank", companyIDParameter, startDateParameter, endDateParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, commaSeperatedBankAccountIdsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPBusinessLicenceBalance_Result> MUNSERREPBusinessLicenceBalance(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPBusinessLicenceBalance_Result>("MUNSERREPBusinessLicenceBalance", companyIDParameter, startDateParameter, endDateParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPBusinessLicenceBalanceByClosing_Result> MUNSERREPBusinessLicenceBalanceByClosing(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPBusinessLicenceBalanceByClosing_Result>("MUNSERREPBusinessLicenceBalanceByClosing", companyIDParameter, startDateParameter, endDateParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPBusinessLicenceTransaction_Result> MUNSERREPBusinessLicenceTransaction(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string commaSeperatedAccountIds, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, Nullable<int> status, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPBusinessLicenceTransaction_Result>("MUNSERREPBusinessLicenceTransaction", companyIDParameter, startDateParameter, endDateParameter, commaSeperatedAccountIdsParameter, pageIndexParameter, pageSizeParameter, localeParameter, statusParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPIVUStatement_Result> MUNSERREPIVUStatementForHP(Nullable<int> companyId, Nullable<int> accountId, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord, Nullable<System.DateTime> futureDate)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var futureDateParameter = futureDate.HasValue ?
                new ObjectParameter("FutureDate", futureDate) :
                new ObjectParameter("FutureDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPIVUStatement_Result>("MUNSERREPIVUStatementForHP", companyIdParameter, accountIdParameter, balanceFromParameter, balanceToParameter, pageIndexParameter, pageSizeParameter, totalRecord, futureDateParameter);
        }
    
        public virtual ObjectResult<MUNSERREPBusinessLicenseStatement_Result> MUNSERREPBusinessLicenseStatementForHP(Nullable<int> companyId, Nullable<int> accountId, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord, Nullable<System.DateTime> futureDate)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var futureDateParameter = futureDate.HasValue ?
                new ObjectParameter("FutureDate", futureDate) :
                new ObjectParameter("FutureDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPBusinessLicenseStatement_Result>("MUNSERREPBusinessLicenseStatementForHP", companyIdParameter, accountIdParameter, pageIndexParameter, pageSizeParameter, totalRecord, futureDateParameter);
        }
    
        public virtual ObjectResult<MUNSERREPClosingSummaryByPaymentType_Result> MUNSERREPClosingSummaryByPaymentType(Nullable<int> companyID, Nullable<System.DateTime> startPeriod, Nullable<System.DateTime> endPeriod, string commaSeperatedPaymentTypeIDs, Nullable<decimal> netClosingFrom, Nullable<decimal> netClosingTo, Nullable<int> pageIndex, Nullable<int> pageSize, string locale)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startPeriodParameter = startPeriod.HasValue ?
                new ObjectParameter("StartPeriod", startPeriod) :
                new ObjectParameter("StartPeriod", typeof(System.DateTime));
    
            var endPeriodParameter = endPeriod.HasValue ?
                new ObjectParameter("EndPeriod", endPeriod) :
                new ObjectParameter("EndPeriod", typeof(System.DateTime));
    
            var commaSeperatedPaymentTypeIDsParameter = commaSeperatedPaymentTypeIDs != null ?
                new ObjectParameter("CommaSeperatedPaymentTypeIDs", commaSeperatedPaymentTypeIDs) :
                new ObjectParameter("CommaSeperatedPaymentTypeIDs", typeof(string));
    
            var netClosingFromParameter = netClosingFrom.HasValue ?
                new ObjectParameter("NetClosingFrom", netClosingFrom) :
                new ObjectParameter("NetClosingFrom", typeof(decimal));
    
            var netClosingToParameter = netClosingTo.HasValue ?
                new ObjectParameter("NetClosingTo", netClosingTo) :
                new ObjectParameter("NetClosingTo", typeof(decimal));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPClosingSummaryByPaymentType_Result>("MUNSERREPClosingSummaryByPaymentType", companyIDParameter, startPeriodParameter, endPeriodParameter, commaSeperatedPaymentTypeIDsParameter, netClosingFromParameter, netClosingToParameter, pageIndexParameter, pageSizeParameter, localeParameter);
        }
    
        public virtual ObjectResult<MUNACCJournalDetailGet_Result> MUNACCJournalDetailGet(Nullable<int> companyID, string accountID, string locale, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string documentTypeID, string accountServiceTypeIDs, string invoiceTypeIDs, string paymentPlanTypeIDs, string bankAccountIDs, string grantIDs, string checkbookIDs, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, Nullable<int> referrenceID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var documentTypeIDParameter = documentTypeID != null ?
                new ObjectParameter("DocumentTypeID", documentTypeID) :
                new ObjectParameter("DocumentTypeID", typeof(string));
    
            var accountServiceTypeIDsParameter = accountServiceTypeIDs != null ?
                new ObjectParameter("AccountServiceTypeIDs", accountServiceTypeIDs) :
                new ObjectParameter("AccountServiceTypeIDs", typeof(string));
    
            var invoiceTypeIDsParameter = invoiceTypeIDs != null ?
                new ObjectParameter("InvoiceTypeIDs", invoiceTypeIDs) :
                new ObjectParameter("InvoiceTypeIDs", typeof(string));
    
            var paymentPlanTypeIDsParameter = paymentPlanTypeIDs != null ?
                new ObjectParameter("PaymentPlanTypeIDs", paymentPlanTypeIDs) :
                new ObjectParameter("PaymentPlanTypeIDs", typeof(string));
    
            var bankAccountIDsParameter = bankAccountIDs != null ?
                new ObjectParameter("BankAccountIDs", bankAccountIDs) :
                new ObjectParameter("BankAccountIDs", typeof(string));
    
            var grantIDsParameter = grantIDs != null ?
                new ObjectParameter("GrantIDs", grantIDs) :
                new ObjectParameter("GrantIDs", typeof(string));
    
            var checkbookIDsParameter = checkbookIDs != null ?
                new ObjectParameter("CheckbookIDs", checkbookIDs) :
                new ObjectParameter("CheckbookIDs", typeof(string));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var referrenceIDParameter = referrenceID.HasValue ?
                new ObjectParameter("ReferrenceID", referrenceID) :
                new ObjectParameter("ReferrenceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNACCJournalDetailGet_Result>("MUNACCJournalDetailGet", companyIDParameter, accountIDParameter, localeParameter, startDateParameter, endDateParameter, documentTypeIDParameter, accountServiceTypeIDsParameter, invoiceTypeIDsParameter, paymentPlanTypeIDsParameter, bankAccountIDsParameter, grantIDsParameter, checkbookIDsParameter, balanceFromParameter, balanceToParameter, referrenceIDParameter);
        }
    
        public virtual ObjectResult<MUNSERREPReceiptDetail_Result> MUNSERREPReceiptDetail(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, string commaSeperatedCashierIds, string accountServiceTypeIDs, string invoiceTypeIDs, string paymentPlanTypeIDs, string bankAccountIDs, string grantIDs, string checkbookIDs, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var commaSeperatedCashierIdsParameter = commaSeperatedCashierIds != null ?
                new ObjectParameter("CommaSeperatedCashierIds", commaSeperatedCashierIds) :
                new ObjectParameter("CommaSeperatedCashierIds", typeof(string));
    
            var accountServiceTypeIDsParameter = accountServiceTypeIDs != null ?
                new ObjectParameter("AccountServiceTypeIDs", accountServiceTypeIDs) :
                new ObjectParameter("AccountServiceTypeIDs", typeof(string));
    
            var invoiceTypeIDsParameter = invoiceTypeIDs != null ?
                new ObjectParameter("InvoiceTypeIDs", invoiceTypeIDs) :
                new ObjectParameter("InvoiceTypeIDs", typeof(string));
    
            var paymentPlanTypeIDsParameter = paymentPlanTypeIDs != null ?
                new ObjectParameter("PaymentPlanTypeIDs", paymentPlanTypeIDs) :
                new ObjectParameter("PaymentPlanTypeIDs", typeof(string));
    
            var bankAccountIDsParameter = bankAccountIDs != null ?
                new ObjectParameter("BankAccountIDs", bankAccountIDs) :
                new ObjectParameter("BankAccountIDs", typeof(string));
    
            var grantIDsParameter = grantIDs != null ?
                new ObjectParameter("GrantIDs", grantIDs) :
                new ObjectParameter("GrantIDs", typeof(string));
    
            var checkbookIDsParameter = checkbookIDs != null ?
                new ObjectParameter("CheckbookIDs", checkbookIDs) :
                new ObjectParameter("CheckbookIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPReceiptDetail_Result>("MUNSERREPReceiptDetail", companyIDParameter, startDateParameter, endDateParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, commaSeperatedCashierIdsParameter, accountServiceTypeIDsParameter, invoiceTypeIDsParameter, paymentPlanTypeIDsParameter, bankAccountIDsParameter, grantIDsParameter, checkbookIDsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPHistoricalReadingsByMeter_Result> MUNREPHistoricalReadingsByMeter(Nullable<int> companyId, string locale, string meter, Nullable<int> accountID, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var meterParameter = meter != null ?
                new ObjectParameter("Meter", meter) :
                new ObjectParameter("Meter", typeof(string));
    
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPHistoricalReadingsByMeter_Result>("MUNREPHistoricalReadingsByMeter", companyIdParameter, localeParameter, meterParameter, accountIDParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPReceiptRegisterForCR_Result> MUNSERREPReceiptRegisterForCR(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> type, Nullable<int> printTemplateID, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIds, string commaSeperatedCashierIds, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var printTemplateIDParameter = printTemplateID.HasValue ?
                new ObjectParameter("PrintTemplateID", printTemplateID) :
                new ObjectParameter("PrintTemplateID", typeof(int));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var commaSeperatedCashierIdsParameter = commaSeperatedCashierIds != null ?
                new ObjectParameter("CommaSeperatedCashierIds", commaSeperatedCashierIds) :
                new ObjectParameter("CommaSeperatedCashierIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPReceiptRegisterForCR_Result>("MUNSERREPReceiptRegisterForCR", companyIDParameter, startDateParameter, endDateParameter, typeParameter, printTemplateIDParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIdsParameter, commaSeperatedCashierIdsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPInconsistenceReading_Result> MUNREPInconsistenceReading(Nullable<int> companyID, Nullable<int> month, Nullable<int> year, Nullable<int> pageIndex, Nullable<int> pageSize, string language, ObjectParameter totalRecord, ObjectParameter totalConsumption, ObjectParameter totalAmount)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPInconsistenceReading_Result>("MUNREPInconsistenceReading", companyIDParameter, monthParameter, yearParameter, pageIndexParameter, pageSizeParameter, languageParameter, totalRecord, totalConsumption, totalAmount);
        }
    
        public virtual ObjectResult<MUNSERREPAccountServiceRemove_Result> MUNSERREPAccountServiceRemove(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> pageIndex, Nullable<int> pageSize, string language, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPAccountServiceRemove_Result>("MUNSERREPAccountServiceRemove", companyIDParameter, startDateParameter, endDateParameter, pageIndexParameter, pageSizeParameter, languageParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPTransfersReport_Result> MUNREPTransfersReport(Nullable<int> companyID, string locale, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> transferTypeID, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var transferTypeIDParameter = transferTypeID.HasValue ?
                new ObjectParameter("TransferTypeID", transferTypeID) :
                new ObjectParameter("TransferTypeID", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPTransfersReport_Result>("MUNREPTransfersReport", companyIDParameter, localeParameter, fromDateParameter, toDateParameter, transferTypeIDParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPSummaryAccountStatement_Result> MUNREPSummaryAccountStatement(Nullable<int> companyId, string locale, Nullable<int> accountId, Nullable<int> accountPropertyID, string commaSeperatedYearIDs, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var accountPropertyIDParameter = accountPropertyID.HasValue ?
                new ObjectParameter("AccountPropertyID", accountPropertyID) :
                new ObjectParameter("AccountPropertyID", typeof(int));
    
            var commaSeperatedYearIDsParameter = commaSeperatedYearIDs != null ?
                new ObjectParameter("CommaSeperatedYearIDs", commaSeperatedYearIDs) :
                new ObjectParameter("CommaSeperatedYearIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPSummaryAccountStatement_Result>("MUNREPSummaryAccountStatement", companyIdParameter, localeParameter, accountIdParameter, accountPropertyIDParameter, commaSeperatedYearIDsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPCashReceiptControl_Result> MUNREPCashReceiptControl(Nullable<int> companyID, string locale, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPCashReceiptControl_Result>("MUNREPCashReceiptControl", companyIDParameter, localeParameter, startDateParameter, endDateParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPParkMaintenanceMissingServices_Result> MUNREPParkMaintenanceMissingServices(Nullable<int> companyID, string locale, Nullable<int> year, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPParkMaintenanceMissingServices_Result>("MUNREPParkMaintenanceMissingServices", companyIDParameter, localeParameter, yearParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPDuplicatedMeterNumber_Result> MUNREPDuplicatedMeterNumber(Nullable<int> companyID, string locale, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPDuplicatedMeterNumber_Result>("MUNREPDuplicatedMeterNumber", companyIDParameter, localeParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPMigrationValidationFactu_Result> MUNREPMigrationValidationFactu(Nullable<int> companyID, string locale, Nullable<int> typeID, string serviceCodes, string accountIDs, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var serviceCodesParameter = serviceCodes != null ?
                new ObjectParameter("ServiceCodes", serviceCodes) :
                new ObjectParameter("ServiceCodes", typeof(string));
    
            var accountIDsParameter = accountIDs != null ?
                new ObjectParameter("AccountIDs", accountIDs) :
                new ObjectParameter("AccountIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPMigrationValidationFactu_Result>("MUNREPMigrationValidationFactu", companyIDParameter, localeParameter, typeIDParameter, serviceCodesParameter, accountIDsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPMigrationValidationCobros_Result> MUNREPMigrationValidationCobros(Nullable<int> companyID, string locale, Nullable<int> typeID, string serviceCodes, string accountIDs, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var serviceCodesParameter = serviceCodes != null ?
                new ObjectParameter("ServiceCodes", serviceCodes) :
                new ObjectParameter("ServiceCodes", typeof(string));
    
            var accountIDsParameter = accountIDs != null ?
                new ObjectParameter("AccountIDs", accountIDs) :
                new ObjectParameter("AccountIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPMigrationValidationCobros_Result>("MUNREPMigrationValidationCobros", companyIDParameter, localeParameter, typeIDParameter, serviceCodesParameter, accountIDsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPMigrationValidationBienes_Result> MUNREPMigrationValidationBienes(Nullable<int> companyID, string locale, Nullable<int> typeID, string serviceCodes, string accountIDs, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var serviceCodesParameter = serviceCodes != null ?
                new ObjectParameter("ServiceCodes", serviceCodes) :
                new ObjectParameter("ServiceCodes", typeof(string));
    
            var accountIDsParameter = accountIDs != null ?
                new ObjectParameter("AccountIDs", accountIDs) :
                new ObjectParameter("AccountIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPMigrationValidationBienes_Result>("MUNREPMigrationValidationBienes", companyIDParameter, localeParameter, typeIDParameter, serviceCodesParameter, accountIDsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPServicesLinkedToRight_Result> MUNREPServicesLinkedToRight(Nullable<int> companyID, string locale, Nullable<int> typeID, string commaSeperatedServiceTypeIDs, string commaSeperatedServiceIDs, string commaSeperatedAccountIDs, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var commaSeperatedServiceTypeIDsParameter = commaSeperatedServiceTypeIDs != null ?
                new ObjectParameter("CommaSeperatedServiceTypeIDs", commaSeperatedServiceTypeIDs) :
                new ObjectParameter("CommaSeperatedServiceTypeIDs", typeof(string));
    
            var commaSeperatedServiceIDsParameter = commaSeperatedServiceIDs != null ?
                new ObjectParameter("CommaSeperatedServiceIDs", commaSeperatedServiceIDs) :
                new ObjectParameter("CommaSeperatedServiceIDs", typeof(string));
    
            var commaSeperatedAccountIDsParameter = commaSeperatedAccountIDs != null ?
                new ObjectParameter("CommaSeperatedAccountIDs", commaSeperatedAccountIDs) :
                new ObjectParameter("CommaSeperatedAccountIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPServicesLinkedToRight_Result>("MUNREPServicesLinkedToRight", companyIDParameter, localeParameter, typeIDParameter, commaSeperatedServiceTypeIDsParameter, commaSeperatedServiceIDsParameter, commaSeperatedAccountIDsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPDailyIncomeState_Result> MUNSERREPDailyIncomeState(Nullable<int> companyID, string locale, Nullable<System.DateTime> startPeriod, string commaSeperatedServiceIDs, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var startPeriodParameter = startPeriod.HasValue ?
                new ObjectParameter("StartPeriod", startPeriod) :
                new ObjectParameter("StartPeriod", typeof(System.DateTime));
    
            var commaSeperatedServiceIDsParameter = commaSeperatedServiceIDs != null ?
                new ObjectParameter("CommaSeperatedServiceIDs", commaSeperatedServiceIDs) :
                new ObjectParameter("CommaSeperatedServiceIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPDailyIncomeState_Result>("MUNSERREPDailyIncomeState", companyIDParameter, localeParameter, startPeriodParameter, commaSeperatedServiceIDsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPMonthlyIncomeStatementByServices_Result> MUNREPMonthlyIncomeStatementByServices(Nullable<int> companyID, string locale, Nullable<System.DateTime> closingDate, string commaSeperatedServiceIDs, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var closingDateParameter = closingDate.HasValue ?
                new ObjectParameter("ClosingDate", closingDate) :
                new ObjectParameter("ClosingDate", typeof(System.DateTime));
    
            var commaSeperatedServiceIDsParameter = commaSeperatedServiceIDs != null ?
                new ObjectParameter("CommaSeperatedServiceIDs", commaSeperatedServiceIDs) :
                new ObjectParameter("CommaSeperatedServiceIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPMonthlyIncomeStatementByServices_Result>("MUNREPMonthlyIncomeStatementByServices", companyIDParameter, localeParameter, closingDateParameter, commaSeperatedServiceIDsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPQuarterlyIncomeStatementByServices_Result> MUNREPQuarterlyIncomeStatementByServices(Nullable<int> companyID, string locale, Nullable<int> quarter, Nullable<int> year, string commaSeperatedServiceIDs, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var quarterParameter = quarter.HasValue ?
                new ObjectParameter("Quarter", quarter) :
                new ObjectParameter("Quarter", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var commaSeperatedServiceIDsParameter = commaSeperatedServiceIDs != null ?
                new ObjectParameter("CommaSeperatedServiceIDs", commaSeperatedServiceIDs) :
                new ObjectParameter("CommaSeperatedServiceIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPQuarterlyIncomeStatementByServices_Result>("MUNREPQuarterlyIncomeStatementByServices", companyIDParameter, localeParameter, quarterParameter, yearParameter, commaSeperatedServiceIDsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPYearlyIncomeStatementByServices_Result> MUNREPYearlyIncomeStatementByServices(Nullable<int> companyID, string locale, Nullable<int> year, string commaSeperatedServiceIDs, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var commaSeperatedServiceIDsParameter = commaSeperatedServiceIDs != null ?
                new ObjectParameter("CommaSeperatedServiceIDs", commaSeperatedServiceIDs) :
                new ObjectParameter("CommaSeperatedServiceIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPYearlyIncomeStatementByServices_Result>("MUNREPYearlyIncomeStatementByServices", companyIDParameter, localeParameter, yearParameter, commaSeperatedServiceIDsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPPropertyMovementByAccount_Result> MUNREPPropertyMovementByAccount(Nullable<int> companyID, Nullable<int> accountID, string accountPropertyIDs, Nullable<decimal> rangeFrom, Nullable<decimal> rangeTo, Nullable<int> pageIndex, Nullable<int> pageSize, string language, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(int));
    
            var accountPropertyIDsParameter = accountPropertyIDs != null ?
                new ObjectParameter("AccountPropertyIDs", accountPropertyIDs) :
                new ObjectParameter("AccountPropertyIDs", typeof(string));
    
            var rangeFromParameter = rangeFrom.HasValue ?
                new ObjectParameter("RangeFrom", rangeFrom) :
                new ObjectParameter("RangeFrom", typeof(decimal));
    
            var rangeToParameter = rangeTo.HasValue ?
                new ObjectParameter("RangeTo", rangeTo) :
                new ObjectParameter("RangeTo", typeof(decimal));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPPropertyMovementByAccount_Result>("MUNREPPropertyMovementByAccount", companyIDParameter, accountIDParameter, accountPropertyIDsParameter, rangeFromParameter, rangeToParameter, pageIndexParameter, pageSizeParameter, languageParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPRoutaMissingServices_Result> MUNREPRoutaMissingServices(Nullable<int> companyID, string locale, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPRoutaMissingServices_Result>("MUNREPRoutaMissingServices", companyIDParameter, localeParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPAccountPropertyRemove_Result> MUNREPAccountPropertyRemove(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> pageIndex, Nullable<int> pageSize, string language, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPAccountPropertyRemove_Result>("MUNREPAccountPropertyRemove", companyIDParameter, startDateParameter, endDateParameter, pageIndexParameter, pageSizeParameter, languageParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPProjectedAccountStatement_Result> MUNREPProjectedAccountStatement(Nullable<int> companyId, string locale, Nullable<int> accountId, Nullable<System.DateTime> tillDate, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var tillDateParameter = tillDate.HasValue ?
                new ObjectParameter("TillDate", tillDate) :
                new ObjectParameter("TillDate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPProjectedAccountStatement_Result>("MUNREPProjectedAccountStatement", companyIdParameter, localeParameter, accountIdParameter, tillDateParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPConsumptionByRange_Result> MUNREPConsumptionByRange(Nullable<int> companyId, string locale, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string fromCondition, Nullable<decimal> from, string conditionType, string toCondition, Nullable<decimal> to, string taxNumber, string meter, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var fromConditionParameter = fromCondition != null ?
                new ObjectParameter("FromCondition", fromCondition) :
                new ObjectParameter("FromCondition", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(decimal));
    
            var conditionTypeParameter = conditionType != null ?
                new ObjectParameter("ConditionType", conditionType) :
                new ObjectParameter("ConditionType", typeof(string));
    
            var toConditionParameter = toCondition != null ?
                new ObjectParameter("ToCondition", toCondition) :
                new ObjectParameter("ToCondition", typeof(string));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(decimal));
    
            var taxNumberParameter = taxNumber != null ?
                new ObjectParameter("TaxNumber", taxNumber) :
                new ObjectParameter("TaxNumber", typeof(string));
    
            var meterParameter = meter != null ?
                new ObjectParameter("Meter", meter) :
                new ObjectParameter("Meter", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPConsumptionByRange_Result>("MUNREPConsumptionByRange", companyIdParameter, localeParameter, fromDateParameter, toDateParameter, fromConditionParameter, fromParameter, conditionTypeParameter, toConditionParameter, toParameter, taxNumberParameter, meterParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPListOfPaymentsMadeByTheTaxpayer_Result> MUNSERREPListOfPaymentsMadeByTheTaxpayer(Nullable<int> companyID, string locale, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string commaSeperatedAccountIds, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPListOfPaymentsMadeByTheTaxpayer_Result>("MUNSERREPListOfPaymentsMadeByTheTaxpayer", companyIDParameter, localeParameter, startDateParameter, endDateParameter, commaSeperatedAccountIdsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPDailyCollection_Result> MUNSERREPDailyCollection(Nullable<int> companyID, string locale, Nullable<System.DateTime> startPeriod, string commaSeperatedServiceIDs, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var startPeriodParameter = startPeriod.HasValue ?
                new ObjectParameter("StartPeriod", startPeriod) :
                new ObjectParameter("StartPeriod", typeof(System.DateTime));
    
            var commaSeperatedServiceIDsParameter = commaSeperatedServiceIDs != null ?
                new ObjectParameter("CommaSeperatedServiceIDs", commaSeperatedServiceIDs) :
                new ObjectParameter("CommaSeperatedServiceIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPDailyCollection_Result>("MUNSERREPDailyCollection", companyIDParameter, localeParameter, startPeriodParameter, commaSeperatedServiceIDsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPAccountServicesMissingFiling_Result> MUNSERREPAccountServicesMissingFiling(Nullable<int> companyId, string locale, Nullable<int> accountId, string commaSeperatedServiceIDs, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var commaSeperatedServiceIDsParameter = commaSeperatedServiceIDs != null ?
                new ObjectParameter("CommaSeperatedServiceIDs", commaSeperatedServiceIDs) :
                new ObjectParameter("CommaSeperatedServiceIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPAccountServicesMissingFiling_Result>("MUNSERREPAccountServicesMissingFiling", companyIdParameter, localeParameter, accountIdParameter, commaSeperatedServiceIDsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPException_Result> MUNREPException(Nullable<int> companyID, Nullable<System.DateTime> date, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPException_Result>("MUNREPException", companyIDParameter, dateParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPJobSchedulerHistory_Result> MUNREPJobSchedulerHistory(string locale, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPJobSchedulerHistory_Result>("MUNREPJobSchedulerHistory", localeParameter, fromDateParameter, toDateParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPBusinessLicenceSanitaryPermitDueDate_Result> MUNREPBusinessLicenceSanitaryPermitDueDate(Nullable<int> companyId, string locale, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string commaSeperatedAccountIDs, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var commaSeperatedAccountIDsParameter = commaSeperatedAccountIDs != null ?
                new ObjectParameter("CommaSeperatedAccountIDs", commaSeperatedAccountIDs) :
                new ObjectParameter("CommaSeperatedAccountIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPBusinessLicenceSanitaryPermitDueDate_Result>("MUNREPBusinessLicenceSanitaryPermitDueDate", companyIdParameter, localeParameter, fromDateParameter, toDateParameter, commaSeperatedAccountIDsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPBusinessLicenceGeneral_Result> MUNREPBusinessLicenceGeneral(Nullable<int> companyID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<decimal> balanceFrom, Nullable<decimal> balanceTo, string commaSeperatedAccountIDs, Nullable<int> pageIndex, Nullable<int> pageSize, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var balanceFromParameter = balanceFrom.HasValue ?
                new ObjectParameter("BalanceFrom", balanceFrom) :
                new ObjectParameter("BalanceFrom", typeof(decimal));
    
            var balanceToParameter = balanceTo.HasValue ?
                new ObjectParameter("BalanceTo", balanceTo) :
                new ObjectParameter("BalanceTo", typeof(decimal));
    
            var commaSeperatedAccountIDsParameter = commaSeperatedAccountIDs != null ?
                new ObjectParameter("CommaSeperatedAccountIDs", commaSeperatedAccountIDs) :
                new ObjectParameter("CommaSeperatedAccountIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPBusinessLicenceGeneral_Result>("MUNREPBusinessLicenceGeneral", companyIDParameter, fromDateParameter, toDateParameter, balanceFromParameter, balanceToParameter, commaSeperatedAccountIDsParameter, pageIndexParameter, pageSizeParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPOneTimePayment_Result> MUNSERREPOneTimePayment(Nullable<int> companyID, string locale, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPOneTimePayment_Result>("MUNSERREPOneTimePayment", companyIDParameter, localeParameter, fromDateParameter, toDateParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPBankCollection_Result> MUNSERREPBankCollection(Nullable<int> companyID, string locale, Nullable<System.DateTime> startPeriod, string commaSeperatedContractIDs, string commaSeperatedBankIDs, string commaSeperatedServiceIDs, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var startPeriodParameter = startPeriod.HasValue ?
                new ObjectParameter("StartPeriod", startPeriod) :
                new ObjectParameter("StartPeriod", typeof(System.DateTime));
    
            var commaSeperatedContractIDsParameter = commaSeperatedContractIDs != null ?
                new ObjectParameter("CommaSeperatedContractIDs", commaSeperatedContractIDs) :
                new ObjectParameter("CommaSeperatedContractIDs", typeof(string));
    
            var commaSeperatedBankIDsParameter = commaSeperatedBankIDs != null ?
                new ObjectParameter("CommaSeperatedBankIDs", commaSeperatedBankIDs) :
                new ObjectParameter("CommaSeperatedBankIDs", typeof(string));
    
            var commaSeperatedServiceIDsParameter = commaSeperatedServiceIDs != null ?
                new ObjectParameter("CommaSeperatedServiceIDs", commaSeperatedServiceIDs) :
                new ObjectParameter("CommaSeperatedServiceIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPBankCollection_Result>("MUNSERREPBankCollection", companyIDParameter, localeParameter, startPeriodParameter, commaSeperatedContractIDsParameter, commaSeperatedBankIDsParameter, commaSeperatedServiceIDsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPDailyIncomeProduceBank_Result> MUNSERREPDailyIncomeProduceBank(Nullable<int> companyID, string locale, Nullable<System.DateTime> startPeriod, string commaSeperatedContractIDs, string commaSeperatedBankIDs, string commaSeperatedServiceIDs, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var startPeriodParameter = startPeriod.HasValue ?
                new ObjectParameter("StartPeriod", startPeriod) :
                new ObjectParameter("StartPeriod", typeof(System.DateTime));
    
            var commaSeperatedContractIDsParameter = commaSeperatedContractIDs != null ?
                new ObjectParameter("CommaSeperatedContractIDs", commaSeperatedContractIDs) :
                new ObjectParameter("CommaSeperatedContractIDs", typeof(string));
    
            var commaSeperatedBankIDsParameter = commaSeperatedBankIDs != null ?
                new ObjectParameter("CommaSeperatedBankIDs", commaSeperatedBankIDs) :
                new ObjectParameter("CommaSeperatedBankIDs", typeof(string));
    
            var commaSeperatedServiceIDsParameter = commaSeperatedServiceIDs != null ?
                new ObjectParameter("CommaSeperatedServiceIDs", commaSeperatedServiceIDs) :
                new ObjectParameter("CommaSeperatedServiceIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPDailyIncomeProduceBank_Result>("MUNSERREPDailyIncomeProduceBank", companyIDParameter, localeParameter, startPeriodParameter, commaSeperatedContractIDsParameter, commaSeperatedBankIDsParameter, commaSeperatedServiceIDsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPStatisticsofReceiptsCollected_Result> MUNSERREPStatisticsofReceiptsCollected(Nullable<int> companyID, string locale, Nullable<System.DateTime> date, Nullable<int> bankID, string contract, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var bankIDParameter = bankID.HasValue ?
                new ObjectParameter("BankID", bankID) :
                new ObjectParameter("BankID", typeof(int));
    
            var contractParameter = contract != null ?
                new ObjectParameter("Contract", contract) :
                new ObjectParameter("Contract", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPStatisticsofReceiptsCollected_Result>("MUNSERREPStatisticsofReceiptsCollected", companyIDParameter, localeParameter, dateParameter, bankIDParameter, contractParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPListOfReceiptCollectedBank_Result> MUNSERREPListOfReceiptCollectedBank(Nullable<int> companyID, string locale, Nullable<System.DateTime> startDate, string commaSeperatedContractIDs, string commaSeperatedBankIDs, string commaSeperatedAccountIds, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var commaSeperatedContractIDsParameter = commaSeperatedContractIDs != null ?
                new ObjectParameter("CommaSeperatedContractIDs", commaSeperatedContractIDs) :
                new ObjectParameter("CommaSeperatedContractIDs", typeof(string));
    
            var commaSeperatedBankIDsParameter = commaSeperatedBankIDs != null ?
                new ObjectParameter("CommaSeperatedBankIDs", commaSeperatedBankIDs) :
                new ObjectParameter("CommaSeperatedBankIDs", typeof(string));
    
            var commaSeperatedAccountIdsParameter = commaSeperatedAccountIds != null ?
                new ObjectParameter("CommaSeperatedAccountIds", commaSeperatedAccountIds) :
                new ObjectParameter("CommaSeperatedAccountIds", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPListOfReceiptCollectedBank_Result>("MUNSERREPListOfReceiptCollectedBank", companyIDParameter, localeParameter, startDateParameter, commaSeperatedContractIDsParameter, commaSeperatedBankIDsParameter, commaSeperatedAccountIdsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPControlOfPaymentsMadeInTheBank_Result> MUNSERREPControlOfPaymentsMadeInTheBank(Nullable<int> companyID, string locale, Nullable<System.DateTime> startPeriod, string commaSeperatedContractIDs, string commaSeperatedBankIDs, string commaSeperatedServiceIDs, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var startPeriodParameter = startPeriod.HasValue ?
                new ObjectParameter("StartPeriod", startPeriod) :
                new ObjectParameter("StartPeriod", typeof(System.DateTime));
    
            var commaSeperatedContractIDsParameter = commaSeperatedContractIDs != null ?
                new ObjectParameter("CommaSeperatedContractIDs", commaSeperatedContractIDs) :
                new ObjectParameter("CommaSeperatedContractIDs", typeof(string));
    
            var commaSeperatedBankIDsParameter = commaSeperatedBankIDs != null ?
                new ObjectParameter("CommaSeperatedBankIDs", commaSeperatedBankIDs) :
                new ObjectParameter("CommaSeperatedBankIDs", typeof(string));
    
            var commaSeperatedServiceIDsParameter = commaSeperatedServiceIDs != null ?
                new ObjectParameter("CommaSeperatedServiceIDs", commaSeperatedServiceIDs) :
                new ObjectParameter("CommaSeperatedServiceIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPControlOfPaymentsMadeInTheBank_Result>("MUNSERREPControlOfPaymentsMadeInTheBank", companyIDParameter, localeParameter, startPeriodParameter, commaSeperatedContractIDsParameter, commaSeperatedBankIDsParameter, commaSeperatedServiceIDsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPInconsistenciesInTheBankReceipts_Result> MUNSERREPInconsistenciesInTheBankReceipts(Nullable<int> companyID, string locale, Nullable<System.DateTime> startPeriod, string commaSeperatedContractIDs, string commaSeperatedBankIDs, string commaSeperatedServiceIDs, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var startPeriodParameter = startPeriod.HasValue ?
                new ObjectParameter("StartPeriod", startPeriod) :
                new ObjectParameter("StartPeriod", typeof(System.DateTime));
    
            var commaSeperatedContractIDsParameter = commaSeperatedContractIDs != null ?
                new ObjectParameter("CommaSeperatedContractIDs", commaSeperatedContractIDs) :
                new ObjectParameter("CommaSeperatedContractIDs", typeof(string));
    
            var commaSeperatedBankIDsParameter = commaSeperatedBankIDs != null ?
                new ObjectParameter("CommaSeperatedBankIDs", commaSeperatedBankIDs) :
                new ObjectParameter("CommaSeperatedBankIDs", typeof(string));
    
            var commaSeperatedServiceIDsParameter = commaSeperatedServiceIDs != null ?
                new ObjectParameter("CommaSeperatedServiceIDs", commaSeperatedServiceIDs) :
                new ObjectParameter("CommaSeperatedServiceIDs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPInconsistenciesInTheBankReceipts_Result>("MUNSERREPInconsistenciesInTheBankReceipts", companyIDParameter, localeParameter, startPeriodParameter, commaSeperatedContractIDsParameter, commaSeperatedBankIDsParameter, commaSeperatedServiceIDsParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPGeneralMovements_Result> MUNSERREPGeneralMovements(Nullable<int> companyID, string language, Nullable<System.Guid> userID, Nullable<int> acccountID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var acccountIDParameter = acccountID.HasValue ?
                new ObjectParameter("AcccountID", acccountID) :
                new ObjectParameter("AcccountID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPGeneralMovements_Result>("MUNSERREPGeneralMovements", companyIDParameter, languageParameter, userIDParameter, acccountIDParameter, fromDateParameter, toDateParameter, pageIndexParameter, pageSizeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNSERREPReceiptAmnestyMovement_Result> MUNSERREPReceiptAmnestyMovement(Nullable<int> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string locale, ObjectParameter totalRecord)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNSERREPReceiptAmnestyMovement_Result>("MUNSERREPReceiptAmnestyMovement", companyIDParameter, startDateParameter, endDateParameter, localeParameter, totalRecord);
        }
    
        public virtual ObjectResult<MUNREPAccountByServicesType_Result> MUNREPAccountByServicesType(Nullable<int> companyID, string language, Nullable<int> serviceTypeID, Nullable<bool> notAssignService)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            var serviceTypeIDParameter = serviceTypeID.HasValue ?
                new ObjectParameter("ServiceTypeID", serviceTypeID) :
                new ObjectParameter("ServiceTypeID", typeof(int));
    
            var notAssignServiceParameter = notAssignService.HasValue ?
                new ObjectParameter("NotAssignService", notAssignService) :
                new ObjectParameter("NotAssignService", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNREPAccountByServicesType_Result>("MUNREPAccountByServicesType", companyIDParameter, languageParameter, serviceTypeIDParameter, notAssignServiceParameter);
        }
    }
}
