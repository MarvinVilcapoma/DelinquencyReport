//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArtSolutions.MUN.Core
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AccountUserDataModelContainer : DbContext
    {
        public AccountUserDataModelContainer()
            : base("name=AccountUserDataModelContainer")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<MUNUserAccountGet_Result> MUNUserAccountGet(Nullable<int> companyID, Nullable<int> accountID, Nullable<int> accountTypeID, Nullable<System.Guid> userID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("accountID", accountID) :
                new ObjectParameter("accountID", typeof(int));
    
            var accountTypeIDParameter = accountTypeID.HasValue ?
                new ObjectParameter("accountTypeID", accountTypeID) :
                new ObjectParameter("accountTypeID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNUserAccountGet_Result>("MUNUserAccountGet", companyIDParameter, accountIDParameter, accountTypeIDParameter, userIDParameter);
        }
    
        public virtual int MUNUserAccountInsert(Nullable<int> companyID, Nullable<int> accountTypeID, Nullable<int> accountID, Nullable<System.Guid> userID, Nullable<System.Guid> createdUserID, Nullable<System.DateTime> createdDate, Nullable<System.Guid> modifiedUserID, Nullable<System.DateTime> modifiedDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var accountTypeIDParameter = accountTypeID.HasValue ?
                new ObjectParameter("AccountTypeID", accountTypeID) :
                new ObjectParameter("AccountTypeID", typeof(int));
    
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var createdUserIDParameter = createdUserID.HasValue ?
                new ObjectParameter("CreatedUserID", createdUserID) :
                new ObjectParameter("CreatedUserID", typeof(System.Guid));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var modifiedUserIDParameter = modifiedUserID.HasValue ?
                new ObjectParameter("ModifiedUserID", modifiedUserID) :
                new ObjectParameter("ModifiedUserID", typeof(System.Guid));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MUNUserAccountInsert", companyIDParameter, accountTypeIDParameter, accountIDParameter, userIDParameter, createdUserIDParameter, createdDateParameter, modifiedUserIDParameter, modifiedDateParameter);
        }
    }
}
