//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArtSolutions.MUN.Core
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CompanyDataModelContainer : DbContext
    {
        public CompanyDataModelContainer()
            : base("name=CompanyDataModelContainer")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<MUNCompanyUpdate_Result> MUNCompanyUpdate(Nullable<int> iD, string name, string legalName, string workPhone, string uRL, string email, Nullable<int> logoID, Nullable<int> countryID, string companySize, Nullable<bool> isAgreedTerms, Nullable<System.DateTime> agreeTermsOnDate, string termsDetails, Nullable<bool> isSystem, Nullable<bool> isDeleted, Nullable<bool> isActive, Nullable<int> sort, string code, Nullable<System.Guid> modifiedUserID, Nullable<System.DateTime> modifiedDate, byte[] original_RowVersion, string address1, string address2, string city, Nullable<int> countryStateID, Nullable<int> compnayCountryID, string zipPostalCode, Nullable<int> mUNAccountAddressesID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var legalNameParameter = legalName != null ?
                new ObjectParameter("LegalName", legalName) :
                new ObjectParameter("LegalName", typeof(string));
    
            var workPhoneParameter = workPhone != null ?
                new ObjectParameter("WorkPhone", workPhone) :
                new ObjectParameter("WorkPhone", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var logoIDParameter = logoID.HasValue ?
                new ObjectParameter("LogoID", logoID) :
                new ObjectParameter("LogoID", typeof(int));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            var companySizeParameter = companySize != null ?
                new ObjectParameter("CompanySize", companySize) :
                new ObjectParameter("CompanySize", typeof(string));
    
            var isAgreedTermsParameter = isAgreedTerms.HasValue ?
                new ObjectParameter("IsAgreedTerms", isAgreedTerms) :
                new ObjectParameter("IsAgreedTerms", typeof(bool));
    
            var agreeTermsOnDateParameter = agreeTermsOnDate.HasValue ?
                new ObjectParameter("AgreeTermsOnDate", agreeTermsOnDate) :
                new ObjectParameter("AgreeTermsOnDate", typeof(System.DateTime));
    
            var termsDetailsParameter = termsDetails != null ?
                new ObjectParameter("TermsDetails", termsDetails) :
                new ObjectParameter("TermsDetails", typeof(string));
    
            var isSystemParameter = isSystem.HasValue ?
                new ObjectParameter("IsSystem", isSystem) :
                new ObjectParameter("IsSystem", typeof(bool));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var sortParameter = sort.HasValue ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var modifiedUserIDParameter = modifiedUserID.HasValue ?
                new ObjectParameter("ModifiedUserID", modifiedUserID) :
                new ObjectParameter("ModifiedUserID", typeof(System.Guid));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            var original_RowVersionParameter = original_RowVersion != null ?
                new ObjectParameter("Original_RowVersion", original_RowVersion) :
                new ObjectParameter("Original_RowVersion", typeof(byte[]));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var countryStateIDParameter = countryStateID.HasValue ?
                new ObjectParameter("CountryStateID", countryStateID) :
                new ObjectParameter("CountryStateID", typeof(int));
    
            var compnayCountryIDParameter = compnayCountryID.HasValue ?
                new ObjectParameter("CompnayCountryID", compnayCountryID) :
                new ObjectParameter("CompnayCountryID", typeof(int));
    
            var zipPostalCodeParameter = zipPostalCode != null ?
                new ObjectParameter("ZipPostalCode", zipPostalCode) :
                new ObjectParameter("ZipPostalCode", typeof(string));
    
            var mUNAccountAddressesIDParameter = mUNAccountAddressesID.HasValue ?
                new ObjectParameter("MUNAccountAddressesID", mUNAccountAddressesID) :
                new ObjectParameter("MUNAccountAddressesID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNCompanyUpdate_Result>("MUNCompanyUpdate", iDParameter, nameParameter, legalNameParameter, workPhoneParameter, uRLParameter, emailParameter, logoIDParameter, countryIDParameter, companySizeParameter, isAgreedTermsParameter, agreeTermsOnDateParameter, termsDetailsParameter, isSystemParameter, isDeletedParameter, isActiveParameter, sortParameter, codeParameter, modifiedUserIDParameter, modifiedDateParameter, original_RowVersionParameter, address1Parameter, address2Parameter, cityParameter, countryStateIDParameter, compnayCountryIDParameter, zipPostalCodeParameter, mUNAccountAddressesIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> MUNCompanyCodeExist(Nullable<int> iD, string code)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("MUNCompanyCodeExist", iDParameter, codeParameter);
        }
    
        public virtual ObjectResult<MUNLanguageGet_Result> MUNLanguageGet(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNLanguageGet_Result>("MUNLanguageGet", companyIDParameter);
        }
    
        public virtual ObjectResult<MUNCompanyModulesGet_Result> MUNCompanyModulesGet(Nullable<int> companyID, Nullable<System.Guid> moduleID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNCompanyModulesGet_Result>("MUNCompanyModulesGet", companyIDParameter, moduleIDParameter);
        }
    
        public virtual ObjectResult<MUNCompanyAddressesGet_Result> MUNCompanyAddressesGet(Nullable<int> companyId, string locale)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNCompanyAddressesGet_Result>("MUNCompanyAddressesGet", companyIdParameter, localeParameter);
        }
    
        public virtual ObjectResult<MUNCompanyGet_Result> MUNCompanyGet(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNCompanyGet_Result>("MUNCompanyGet", iDParameter);
        }
    
        public virtual ObjectResult<MUNCompanyParameterGet_Result> MUNCompanyParameterGet(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MUNCompanyParameterGet_Result>("MUNCompanyParameterGet", iDParameter);
        }
    }
}
