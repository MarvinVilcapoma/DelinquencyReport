<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddMoreEmails" xml:space="preserve">
    <value>Add more emails</value>
  </data>
  <data name="AddMorePhones" xml:space="preserve">
    <value>Add more phones</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AddressType" xml:space="preserve">
    <value>Address Type</value>
  </data>
  <data name="ARPEDescription" xml:space="preserve">
    <value>ARPE Description</value>
  </data>
  <data name="AttachmentFile" xml:space="preserve">
    <value>Attachment / File</value>
  </data>
  <data name="BusinessDescription" xml:space="preserve">
    <value>Business Description</value>
  </data>
  <data name="BusinessType" xml:space="preserve">
    <value>Business Type</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="DBAName" xml:space="preserve">
    <value>Business Known As</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailType" xml:space="preserve">
    <value>Email Type</value>
  </data>
  <data name="FinanceTemplate" xml:space="preserve">
    <value>Finance Template</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="IsSubAccount" xml:space="preserve">
    <value>Is Sub-Account</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="ListTitle" xml:space="preserve">
    <value>Accounts</value>
  </data>
  <data name="MiddleName" xml:space="preserve">
    <value>Middle Name</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="NAICSCode" xml:space="preserve">
    <value>NAICS Code</value>
  </data>
  <data name="NewEmail" xml:space="preserve">
    <value>New Email</value>
  </data>
  <data name="NewPhone" xml:space="preserve">
    <value>New Phone</value>
  </data>
  <data name="NewTitle" xml:space="preserve">
    <value>New Account</value>
  </data>
  <data name="OtherEmail" xml:space="preserve">
    <value>Other Email</value>
  </data>
  <data name="OtherPhone" xml:space="preserve">
    <value>Other Phone</value>
  </data>
  <data name="PhoneType" xml:space="preserve">
    <value>Phone Type</value>
  </data>
  <data name="PrimaryEmail" xml:space="preserve">
    <value>Primary Email</value>
  </data>
  <data name="PrimaryPhone" xml:space="preserve">
    <value>Primary Phone</value>
  </data>
  <data name="SecondLastName" xml:space="preserve">
    <value>Second Last Name</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="StateDepartmentRegisterNumber" xml:space="preserve">
    <value>State Department Register Number</value>
  </data>
  <data name="AddressLine1" xml:space="preserve">
    <value>Address 1</value>
  </data>
  <data name="TreasuryDepartment" xml:space="preserve">
    <value>Treasury Department</value>
  </data>
  <data name="Website" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="WorkPhone" xml:space="preserve">
    <value>Work Phone</value>
  </data>
  <data name="ZipCode" xml:space="preserve">
    <value>Zip Code</value>
  </data>
  <data name="Zone" xml:space="preserve">
    <value>Zone</value>
  </data>
  <data name="AddressLine2" xml:space="preserve">
    <value>Address 2</value>
  </data>
  <data name="NewBusinessAccount" xml:space="preserve">
    <value>New Business</value>
  </data>
  <data name="NewIndividualAccount" xml:space="preserve">
    <value>New Citizen</value>
  </data>
  <data name="RequiredValidationAddressMsg" xml:space="preserve">
    <value>At least one address is required.</value>
  </data>
  <data name="RequiredValidationContactMsg" xml:space="preserve">
    <value>At least one contact is required.</value>
  </data>
  <data name="InvalidAccountNumber" xml:space="preserve">
    <value>Invalid Account Number</value>
  </data>
  <data name="ViewTitle" xml:space="preserve">
    <value>View Account</value>
  </data>
  <data name="NewAddress" xml:space="preserve">
    <value>New Address</value>
  </data>
  <data name="NewAttachmentFile" xml:space="preserve">
    <value>New Attachment / File</value>
  </data>
  <data name="NewContact" xml:space="preserve">
    <value>New Contact</value>
  </data>
  <data name="BusinessCode" xml:space="preserve">
    <value>Business Code</value>
  </data>
  <data name="Licenses" xml:space="preserve">
    <value>Licenses</value>
  </data>
  <data name="MobilePhone" xml:space="preserve">
    <value>Mobile Phone</value>
  </data>
  <data name="NewBusiness" xml:space="preserve">
    <value>New Business</value>
  </data>
  <data name="StateDepartmentRegisterNumber1" xml:space="preserve">
    <value>State Dept. Register No.</value>
  </data>
  <data name="EIN" xml:space="preserve">
    <value>Employer Identification Number</value>
  </data>
  <data name="DuplicateRegistrationInfo" xml:space="preserve">
    <value>Account with same registration information already exist.</value>
  </data>
  <data name="EditTitle" xml:space="preserve">
    <value>Edit Account</value>
  </data>
  <data name="ViewContact" xml:space="preserve">
    <value>View Contact</value>
  </data>
  <data name="ViewPhone" xml:space="preserve">
    <value>View Phone</value>
  </data>
  <data name="ViewEmail" xml:space="preserve">
    <value>View Email</value>
  </data>
  <data name="EditContact" xml:space="preserve">
    <value>Edit Contact</value>
  </data>
  <data name="EditAddress" xml:space="preserve">
    <value>Edit Address</value>
  </data>
  <data name="EditEmail" xml:space="preserve">
    <value>Edit Email</value>
  </data>
  <data name="EditPhone" xml:space="preserve">
    <value>Edit Phone</value>
  </data>
  <data name="ViewAddress" xml:space="preserve">
    <value>View Address</value>
  </data>
  <data name="Addresses" xml:space="preserve">
    <value>Addresses</value>
  </data>
  <data name="Emails" xml:space="preserve">
    <value>Emails</value>
  </data>
  <data name="Phones" xml:space="preserve">
    <value>Phones</value>
  </data>
  <data name="ValSSEINNumber" xml:space="preserve">
    <value>Please, enter valid number.</value>
  </data>
  <data name="OGPEDescription" xml:space="preserve">
    <value>OGPe Description</value>
  </data>
  <data name="AlreadyExistMsg" xml:space="preserve">
    <value>already exist.</value>
  </data>
  <data name="OfficeAddressLine1" xml:space="preserve">
    <value>Office Address Line 1</value>
  </data>
  <data name="OfficeAddressLine2" xml:space="preserve">
    <value>Office Address Line 2</value>
  </data>
  <data name="OfficeCity" xml:space="preserve">
    <value>Office City</value>
  </data>
  <data name="OfficeCountry" xml:space="preserve">
    <value>Office Country</value>
  </data>
  <data name="OfficeState" xml:space="preserve">
    <value>Office State</value>
  </data>
  <data name="OfficeZipCode" xml:space="preserve">
    <value>Office Zip Code</value>
  </data>
  <data name="PostalAddressLine1" xml:space="preserve">
    <value>Postal Address Line 1</value>
  </data>
  <data name="PostalAddressLine2" xml:space="preserve">
    <value>Postal Address Line 2</value>
  </data>
  <data name="PostalCity" xml:space="preserve">
    <value>Postal City</value>
  </data>
  <data name="PostalCountry" xml:space="preserve">
    <value>Postal Country</value>
  </data>
  <data name="PostalState" xml:space="preserve">
    <value>Postal State</value>
  </data>
  <data name="PostalZipCode" xml:space="preserve">
    <value>Postal Zip Code</value>
  </data>
  <data name="Salutation" xml:space="preserve">
    <value>Salutation</value>
  </data>
  <data name="ImportAccountFailedMsg" xml:space="preserve">
    <value>Error occur in Account Import</value>
  </data>
  <data name="ContactEmail" xml:space="preserve">
    <value>Contact Email</value>
  </data>
  <data name="ContactLastName" xml:space="preserve">
    <value>Contact Last Name</value>
  </data>
  <data name="ContactName" xml:space="preserve">
    <value>Contact Name</value>
  </data>
  <data name="ContactPhone" xml:space="preserve">
    <value>Contact Phone</value>
  </data>
  <data name="ContactPosition" xml:space="preserve">
    <value>Contact Position</value>
  </data>
  <data name="IsSponsor" xml:space="preserve">
    <value>Is Sponsor</value>
  </data>
  <data name="ValidateForInactiveAccount" xml:space="preserve">
    <value>Account has one or more grant. You can not deactivate account.</value>
  </data>
  <data name="ValidateForInactiveSponsor" xml:space="preserve">
    <value>Account has one or more grant. You can not remove a sponsor.</value>
  </data>
  <data name="OfficeTown" xml:space="preserve">
    <value>Office Town</value>
  </data>
  <data name="PostalTown" xml:space="preserve">
    <value>Postal Town</value>
  </data>
  <data name="ReferenceID" xml:space="preserve">
    <value>ReferenceID</value>
  </data>
  <data name="Town" xml:space="preserve">
    <value>Town</value>
  </data>
  <data name="RegisterNumber" xml:space="preserve">
    <value>Register Number</value>
  </data>
  <data name="IDType" xml:space="preserve">
    <value>ID Type</value>
  </data>
  <data name="DeleteOrFillContactDetailMsg" xml:space="preserve">
    <value>Please delete or fill contact detail.</value>
  </data>
  <data name="DeleteOrFillAddressDetailMsg" xml:space="preserve">
    <value>Please delete or fill address detail.</value>
  </data>
  <data name="Identifica" xml:space="preserve">
    <value>Identifica</value>
  </data>
  <data name="ExemptFromIVA" xml:space="preserve">
    <value>Exempt From IVA</value>
  </data>
  <data name="CreditHistorySuccessMsg" xml:space="preserve">
    <value>Credit amount added successfully. </value>
  </data>
  <data name="DebitHistorySuccessMsg" xml:space="preserve">
    <value>Debit amount added successfully. </value>
  </data>
  <data name="ListCreditHistory" xml:space="preserve">
    <value>List Credit History</value>
  </data>
  <data name="CreditHistoryDetail" xml:space="preserve">
    <value>Credit History Detail</value>
  </data>
  <data name="ListDebitHistory" xml:space="preserve">
    <value>List Debit History</value>
  </data>
  <data name="DebitHistoryPaid" xml:space="preserve">
    <value>Debit History Paid</value>
  </data>
  <data name="AccountList" xml:space="preserve">
    <value>Account List</value>
  </data>
</root>