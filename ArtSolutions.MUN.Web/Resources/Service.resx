<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddRow" xml:space="preserve">
    <value>Add Row</value>
  </data>
  <data name="ApplyAlways" xml:space="preserve">
    <value>Apply Always</value>
  </data>
  <data name="ApplyOn" xml:space="preserve">
    <value>Apply On</value>
  </data>
  <data name="CalculationFrequency" xml:space="preserve">
    <value>Calculation Frequency</value>
  </data>
  <data name="CollectionField" xml:space="preserve">
    <value>Collection Field</value>
  </data>
  <data name="CollectionRuleName" xml:space="preserve">
    <value>Collection Rule Name</value>
  </data>
  <data name="CompareAmountValidationMsg" xml:space="preserve">
    <value>Final Amount {0} should be greater than Starting Amount {1}.</value>
  </data>
  <data name="CompareRangeValidationMsg" xml:space="preserve">
    <value>{0} ({1} - {2}) conflicting with existing range.</value>
  </data>
  <data name="DuplicateServiceName" xml:space="preserve">
    <value>Service name already exists!</value>
  </data>
  <data name="EffectiveFrom" xml:space="preserve">
    <value>Effective From</value>
  </data>
  <data name="EffectiveTo" xml:space="preserve">
    <value>Effective To</value>
  </data>
  <data name="FillingDueDays" xml:space="preserve">
    <value>Filing Due Days</value>
  </data>
  <data name="FinalAmount" xml:space="preserve">
    <value>Final Amount</value>
  </data>
  <data name="FixAmount" xml:space="preserve">
    <value>Fix Amount</value>
  </data>
  <data name="FlatAmount" xml:space="preserve">
    <value>Flat Amount</value>
  </data>
  <data name="Frequency" xml:space="preserve">
    <value>Frequency</value>
  </data>
  <data name="InvalidServiceNumber" xml:space="preserve">
    <value>Invalid Service Number</value>
  </data>
  <data name="IsEditable" xml:space="preserve">
    <value>Is Editable</value>
  </data>
  <data name="ListTitle" xml:space="preserve">
    <value>Services</value>
  </data>
  <data name="NewCollectionRule" xml:space="preserve">
    <value>New Collection Rule</value>
  </data>
  <data name="NewRule" xml:space="preserve">
    <value>New Rule</value>
  </data>
  <data name="NewTitle" xml:space="preserve">
    <value>New Service</value>
  </data>
  <data name="OnField" xml:space="preserve">
    <value>On Field</value>
  </data>
  <data name="PaymentDueDate" xml:space="preserve">
    <value>Payment Due Date</value>
  </data>
  <data name="PaymentDueDays" xml:space="preserve">
    <value>Payment Due Days</value>
  </data>
  <data name="Range" xml:space="preserve">
    <value>Range</value>
  </data>
  <data name="RangeFeeAndPercentage" xml:space="preserve">
    <value>Range Fee and Percentage</value>
  </data>
  <data name="RangeFlat" xml:space="preserve">
    <value>Range Flat</value>
  </data>
  <data name="RangePercentage" xml:space="preserve">
    <value>Range Percentage</value>
  </data>
  <data name="RangeVariableFlat" xml:space="preserve">
    <value>Range Variable Flat</value>
  </data>
  <data name="RangeVariablePercentage" xml:space="preserve">
    <value>Range Variable Percentage</value>
  </data>
  <data name="RemoveRule" xml:space="preserve">
    <value>Remove Rule</value>
  </data>
  <data name="Rule" xml:space="preserve">
    <value>Rule</value>
  </data>
  <data name="ServiceRuleTitle" xml:space="preserve">
    <value>Service Penalty Rules</value>
  </data>
  <data name="UseFixDueDates" xml:space="preserve">
    <value>Use Fix Due Dates</value>
  </data>
  <data name="ViewTitle" xml:space="preserve">
    <value>View Service</value>
  </data>
  <data name="PercentOfPercentValue" xml:space="preserve">
    <value>% of % Value</value>
  </data>
  <data name="PercentValue" xml:space="preserve">
    <value>% Value</value>
  </data>
  <data name="AtleastOneRangeRecordRequiredMsg" xml:space="preserve">
    <value>You must add at least 1 record for range.</value>
  </data>
  <data name="PeriodEndDate" xml:space="preserve">
    <value>Period End Date</value>
  </data>
  <data name="PeriodStartDate" xml:space="preserve">
    <value>Period Start Date</value>
  </data>
  <data name="AddDiscountDate" xml:space="preserve">
    <value>Add Discount Dates</value>
  </data>
  <data name="AddFillingDate" xml:space="preserve">
    <value>Add Filing Due Dates</value>
  </data>
  <data name="AddPaymentDate" xml:space="preserve">
    <value>Add Payment Due Dates</value>
  </data>
  <data name="AddPaymentGracePeriod" xml:space="preserve">
    <value>Add Payment Grace Periods</value>
  </data>
  <data name="DiscountOn" xml:space="preserve">
    <value>Discount On</value>
  </data>
  <data name="FillingDueOn" xml:space="preserve">
    <value>Filing Due On</value>
  </data>
  <data name="PaymentDueOn" xml:space="preserve">
    <value>Payment Due On</value>
  </data>
  <data name="PaymentGracePeriod" xml:space="preserve">
    <value>Payment Grace Period</value>
  </data>
  <data name="ChangeDiscountDate" xml:space="preserve">
    <value>Change Discount Dates</value>
  </data>
  <data name="ChangeFillingDate" xml:space="preserve">
    <value>Change Filing Due Dates</value>
  </data>
  <data name="ChangePaymentDate" xml:space="preserve">
    <value>Change Payment Due Dates</value>
  </data>
  <data name="ChangePaymentGracePeriod" xml:space="preserve">
    <value>Change Payment Grace Periods</value>
  </data>
  <data name="DiscountOnRequired" xml:space="preserve">
    <value>Discount On is required!</value>
  </data>
  <data name="FillingDueOnRequired" xml:space="preserve">
    <value>Filing Due On is required!</value>
  </data>
  <data name="PaymentDueOnRequired" xml:space="preserve">
    <value>Payment Due On is required!</value>
  </data>
  <data name="PaymentGracePeriodRequired" xml:space="preserve">
    <value>Payment Grace Period is required!</value>
  </data>
  <data name="SelectOptionErrorMsg" xml:space="preserve">
    <value>Please, select at least one option.</value>
  </data>
  <data name="CalculationDatesPopupTitle" xml:space="preserve">
    <value>Service Calculation Dates</value>
  </data>
  <data name="CompareEffectiveDatesValidationMsg" xml:space="preserve">
    <value>At least 1 year difference is required between Effective From and Effective To dates.</value>
  </data>
  <data name="ConfirmChangeInputValidationMsg" xml:space="preserve">
    <value>Change in {0} will reset currently populated all due dates.</value>
  </data>
  <data name="EndPeriod" xml:space="preserve">
    <value>End Period</value>
  </data>
  <data name="StartPeriod" xml:space="preserve">
    <value>Start Period</value>
  </data>
  <data name="UseFixDates" xml:space="preserve">
    <value>Use Fix Dates</value>
  </data>
  <data name="UseFixDays" xml:space="preserve">
    <value>Use Fix Days</value>
  </data>
  <data name="ComparePeriodDatesValidationMsg" xml:space="preserve">
    <value>Period End Date must be greater than Period Start Date.</value>
  </data>
  <data name="CollectionRuleRequired" xml:space="preserve">
    <value>At least one collection rule is required.</value>
  </data>
  <data name="DescriptionLengthValidationMsg" xml:space="preserve">
    <value>Description Length exceeded.</value>
  </data>
  <data name="EndDay" xml:space="preserve">
    <value>End Day</value>
  </data>
  <data name="StartAmount" xml:space="preserve">
    <value>Starting Amount</value>
  </data>
  <data name="StartDay" xml:space="preserve">
    <value>Starting Day</value>
  </data>
  <data name="MaxCollectionRuleRangeValMsg" xml:space="preserve">
    <value>This rule will not be applied over those cases that exceed the maximum value for final amount that you entered, The max allowed value for final amount field: 9999999999999</value>
  </data>
  <data name="DiscountDates" xml:space="preserve">
    <value>Discount Dates</value>
  </data>
  <data name="FillingDueDates" xml:space="preserve">
    <value>Filing Due Dates</value>
  </data>
  <data name="PaymentDueDates" xml:space="preserve">
    <value>Payment Due Dates</value>
  </data>
  <data name="PaymentGracePeriods" xml:space="preserve">
    <value>Payment Grace Periods</value>
  </data>
  <data name="ViewDiscountDates" xml:space="preserve">
    <value>View Discount Dates</value>
  </data>
  <data name="ViewFillingDate" xml:space="preserve">
    <value>View Filing Due Dates</value>
  </data>
  <data name="ViewPaymentDueDates" xml:space="preserve">
    <value>View Payment Due Dates</value>
  </data>
  <data name="ViewPaymentGracePeriods" xml:space="preserve">
    <value>View Payment Grace Periods</value>
  </data>
  <data name="EditTitle" xml:space="preserve">
    <value>Edit Service</value>
  </data>
  <data name="DiscountDatesTitle" xml:space="preserve">
    <value>Service Discount Dates</value>
  </data>
  <data name="FillingDueDatesTitle" xml:space="preserve">
    <value>Service Filing Due Dates</value>
  </data>
  <data name="PaymentDueDatesTitle" xml:space="preserve">
    <value>Service Payment Due Dates</value>
  </data>
  <data name="PaymentGracePeriodsTitle" xml:space="preserve">
    <value>Service Payment Grace Periods</value>
  </data>
  <data name="EditRule" xml:space="preserve">
    <value>Edit Rule</value>
  </data>
  <data name="ServiceLockedMsg" xml:space="preserve">
    <value>Service is locked. Please, contact administrator for details.</value>
  </data>
  <data name="DiscountPercentageHeaderTitle" xml:space="preserve">
    <value>Discount %</value>
  </data>
  <data name="DiscountPercentageRequired" xml:space="preserve">
    <value>Discount Percentage is required!</value>
  </data>
  <data name="DueDays" xml:space="preserve">
    <value>Due Days</value>
  </data>
  <data name="DeleteFailedErrMsg" xml:space="preserve">
    <value>Unable to delete rule.</value>
  </data>
  <data name="CopyRule" xml:space="preserve">
    <value>Copy Rule</value>
  </data>
  <data name="AddException" xml:space="preserve">
    <value>Add Exemption</value>
  </data>
  <data name="ExceptionPercentage" xml:space="preserve">
    <value>Exemption %</value>
  </data>
  <data name="ExistingExceptionRules" xml:space="preserve">
    <value>Existing Exemption Rules</value>
  </data>
  <data name="ServiceException" xml:space="preserve">
    <value>Service Exemption</value>
  </data>
  <data name="AddServiceException" xml:space="preserve">
    <value>Add Service Exemption</value>
  </data>
  <data name="EditServiceException" xml:space="preserve">
    <value>Edit Service Exemption</value>
  </data>
  <data name="ExceptionValueDuplicated" xml:space="preserve">
    <value>Exemption value duplicated.</value>
  </data>
  <data name="ExceptionValueErrMsg" xml:space="preserve">
    <value>Exemption value should be greater than 0 and less or equal to 100.</value>
  </data>
  <data name="ViewServiceException" xml:space="preserve">
    <value>View Service Exemption</value>
  </data>
  <data name="ServiceExceptionAlreadyInUse" xml:space="preserve">
    <value>This exemption is already in use. Please, contact administrator for details.</value>
  </data>
  <data name="FilingType" xml:space="preserve">
    <value>Filing Type</value>
  </data>
  <data name="ViewRule" xml:space="preserve">
    <value>View Rule</value>
  </data>
  <data name="Factor" xml:space="preserve">
    <value>Factor</value>
  </data>
  <data name="CustomField" xml:space="preserve">
    <value>Custom Field</value>
  </data>
  <data name="AutoCreation" xml:space="preserve">
    <value>Auto Creation</value>
  </data>
  <data name="BaseAmount" xml:space="preserve">
    <value>Base Amount</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="EndUnit" xml:space="preserve">
    <value>End Unit</value>
  </data>
  <data name="ExceedBaseAndFee" xml:space="preserve">
    <value>Exceed Base And Fee</value>
  </data>
  <data name="FactorValue" xml:space="preserve">
    <value>Factor Value</value>
  </data>
  <data name="StartingUnit" xml:space="preserve">
    <value>Starting Unit</value>
  </data>
  <data name="AccountType" xml:space="preserve">
    <value>Account Type</value>
  </data>
  <data name="FilingForm" xml:space="preserve">
    <value>Filing Form</value>
  </data>
  <data name="AllowDuplicates" xml:space="preserve">
    <value>Allow Duplicates</value>
  </data>
  <data name="MultipleServicesPerYear" xml:space="preserve">
    <value>Multiple Services Per Year</value>
  </data>
  <data name="CustomDateField" xml:space="preserve">
    <value>Custom Date Field</value>
  </data>
  <data name="TotalValueLabel" xml:space="preserve">
    <value>Total Value Label</value>
  </data>
</root>