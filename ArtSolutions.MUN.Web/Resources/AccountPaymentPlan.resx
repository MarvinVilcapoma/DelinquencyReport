<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AmountTotal" xml:space="preserve">
    <value>Amount Total</value>
  </data>
  <data name="CalculatePaymentPlan" xml:space="preserve">
    <value>Calculate Payment Plan</value>
  </data>
  <data name="Concept" xml:space="preserve">
    <value>Concept</value>
  </data>
  <data name="Daysofthemonthof" xml:space="preserve">
    <value>days of the month of</value>
  </data>
  <data name="InitialAndMonthlyFeeAmounts" xml:space="preserve">
    <value>Initial and Monthly Fee Amounts</value>
  </data>
  <data name="InitialPayment" xml:space="preserve">
    <value>Initial Payment</value>
  </data>
  <data name="InstalmentAmount" xml:space="preserve">
    <value>Instalment Amount</value>
  </data>
  <data name="InvalidAccountPaymentPlan" xml:space="preserve">
    <value>Invalid Account Payment Plan</value>
  </data>
  <data name="LateInterestPercentage" xml:space="preserve">
    <value>Late Interest Percentage</value>
  </data>
  <data name="LateInterest" xml:space="preserve">
    <value>Late Interest</value>
  </data>
  <data name="ListAccountPaymentPlan" xml:space="preserve">
    <value>List Account Payment Plan</value>
  </data>
  <data name="ManageraCollection" xml:space="preserve">
    <value>Manager(A) Collection</value>
  </data>
  <data name="MonthlyAmount" xml:space="preserve">
    <value>Monthly Amount</value>
  </data>
  <data name="MonthlyAmountToPay" xml:space="preserve">
    <value>Monthly Amount To Pay</value>
  </data>
  <data name="MonthlyDueDate" xml:space="preserve">
    <value>Monthly Due Date</value>
  </data>
  <data name="MonthlyInstallment" xml:space="preserve">
    <value>Monthly Installment</value>
  </data>
  <data name="MonthlyPayments" xml:space="preserve">
    <value>Monthly Payments</value>
  </data>
  <data name="MonthsOfPlan" xml:space="preserve">
    <value>Months of Plan</value>
  </data>
  <data name="NewAccountPaymentPlan" xml:space="preserve">
    <value>New Account Payment Plan</value>
  </data>
  <data name="PaymentPlanSummary" xml:space="preserve">
    <value>Payment Plan Summary</value>
  </data>
  <data name="PlanID" xml:space="preserve">
    <value>Plan ID</value>
  </data>
  <data name="PlanStartDate" xml:space="preserve">
    <value>Plan Start Date</value>
  </data>
  <data name="PleaseCalculatePaymentPlanBeforeSaveMsg" xml:space="preserve">
    <value>Please calculate Payment Plan before save.</value>
  </data>
  <data name="PrintAccountPaymentPlan" xml:space="preserve">
    <value>Print Account Payment Plan</value>
  </data>
  <data name="PrintPaymentPlanDesc1" xml:space="preserve">
    <value>(The) Manager of MUNICIPAL COLLECTION, based on ART. 74 of LAW No. 7794 of APRIL 30, 1998, and ARTICLES 6, 7 AND 16 of the REGULATIONS for the ADMINISTRATIVE AND JUDICIAL CHARGING OF THE INSTITUTION. Make the following PAYMENT ARRANGEMENT WITH THE SENOR (A) (ITA)</value>
  </data>
  <data name="PrintPaymentPlanDesc2" xml:space="preserve">
    <value>That owes by way of municipal taxes, the following</value>
  </data>
  <data name="PrintPaymentPlanDesc3" xml:space="preserve">
    <value>It is agreed to make this arrangement as follows: a first payment of</value>
  </data>
  <data name="PrintPaymentPlanDesc4" xml:space="preserve">
    <value>and the balance in</value>
  </data>
  <data name="PrintPaymentPlanDesc5" xml:space="preserve">
    <value>monthly installments of</value>
  </data>
  <data name="PrintPaymentPlanDesc6" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="PrintPaymentPlanDesc7" xml:space="preserve">
    <value>This payment arrangement is signed in FLORES at</value>
  </data>
  <data name="TermNumber" xml:space="preserve">
    <value>Term Number</value>
  </data>
  <data name="TotalAmountOfPaymentPlan" xml:space="preserve">
    <value>Total Payment Plan Amount</value>
  </data>
  <data name="TotalDebt" xml:space="preserve">
    <value>Total Debt</value>
  </data>
  <data name="TotalInterest" xml:space="preserve">
    <value>Total Interest</value>
  </data>
  <data name="TotalPaidAmount" xml:space="preserve">
    <value>Total Paid Amount</value>
  </data>
  <data name="ViewAccountPaymentPlan" xml:space="preserve">
    <value>View Account Payment Plan</value>
  </data>
  <data name="LatePaymentsInterest" xml:space="preserve">
    <value>Late Payments Interest</value>
  </data>
  <data name="TotalAmount" xml:space="preserve">
    <value>Total Amount</value>
  </data>
  <data name="ProjectedInterests" xml:space="preserve">
    <value>Projected Interests</value>
  </data>
  <data name="Interest" xml:space="preserve">
    <value>Interest</value>
  </data>
  <data name="EditAccountPaymentPlan" xml:space="preserve">
    <value>Edit Account Payment Plan</value>
  </data>
</root>