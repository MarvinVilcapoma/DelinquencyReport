@model ArtSolutions.MUN.Web.Areas.Reports.Models.InconsistenceReadingModel
@using LocalResource = ArtSolutions.MUN.Web.Resources.Report
@using GlobalResource = ArtSolutions.MUN.Web.Resources.Global

@{
    ViewBag.Title = LocalResource.InconsistenceReadingReport;
}

<div class="wrapper wrapper-content fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            @using (Html.BeginForm("ExportInconsistenceReading", "Report", FormMethod.Post, new { id = "form", @class = "wizard-big" }))
            {
                <div class="ibox" id="dviBox">
                    <div class="ibox-title text-center">
                        @{
                            Html.RenderPartial("~/Areas/Reports/Views/Shared/_CommonHeaderReport.cshtml", Model.ReportCompanyModel);
                        }
                    </div>
                    <div class="ibox-content">
                        <div class="row m-t-sm m-b no-print">
                            <div class="col-lg-12">
                                <div class="form-inline">
                                    <div class="form-group">
                                        <label>@GlobalResource.Period <span class="text-danger">*</span></label>
                                        @Html.TextBoxFor(x => x.Period, Model.Period.ToString("MM yyyy"), new { @class = "form-control periodDate textblur", tabindex = 1 })
                                    </div>
                                    <div class="form-group">
                                        <button id="btnGo" type="button" class="btn btn-sm btn-primary m-r-md" name="actionType" value="Go" tabindex="2">@GlobalResource.Go</button>
                                    </div>
                                    <div class="form-group pull-right">
                                        <button type="submit" name="exportType" class="btn-success btn-sm m-r-xs" value="0" itag="btnExcel" tabindex="3" onclick="return validateForm();">@GlobalResource.Excel</button>
                                        <button type="submit" name="exportType" class="btn-success btn-sm m-r-xs" value="1" itag="btnPDF" tabindex="4" onclick="return validateForm();">@GlobalResource.PDF</button>
                                        <button type="button" class="btn-info btn-sm" data-type="2" itag="btnPrint" onclick="return Print();" tabindex="5">@GlobalResource.Print</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="divInconsistenceReading">
                        </div>
                    </div>
                </div>
                @Html.HiddenFor(x => x.FormattedPeriod)
            }
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/dataTables")

    <script type="text/javascript">
        var nodatamsg = '@Html.Raw(GlobalResource.NoDataMessage)';
        var next = '@Html.Raw(GlobalResource.Next)';
        var previous = '@Html.Raw(GlobalResource.Previous)';
        var nodatamsg = '@Html.Raw(GlobalResource.NoDataMessage)';

        var consumptionRange = '@Html.Raw(LocalResource.ConsumptionRange)';
        var compareRangeValidationMsg = '@Html.Raw(LocalResource.CompareRangeValidationMsg)';
        var rangeFromRequiredMsg = '@Html.Raw(LocalResource.RangeFromRequiredMsg)';
        var rangeToRequiredMsg = '@Html.Raw(LocalResource.RangeToRequiredMsg)';
        var accountID = '@Html.Raw(LocalResource.AccountID)';
        var meterNo = '@Html.Raw(LocalResource.MeterNo)';
    </script>
    <script src="~/Scripts/app/repinconsistencereading.js"></script>
}