@model ArtSolutions.MUN.Web.Areas.Accounts.Models.AccountServiceFillingModel
@using ArtSolutions.MUN.Web.Areas.Accounts.Models
@using LocalResource = ArtSolutions.MUN.Web.Resources.AccountService
@using GlobalResource = ArtSolutions.MUN.Web.Resources.Global

@{
    Layout = null;
    var isViewMode = ViewBag.IsViewMode;
}

@using (Ajax.BeginForm("EditFilling", "AccountService", new AjaxOptions { HttpMethod = "POST", OnSuccess = "FillingSuccessCallback(data)" }, new { role = "form", id = "frmFillingLicense", @class = "form-horizontal", data_ajax_mode = "replace-with" }))
{

    <div class="modal-body no-padding">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                @if (isViewMode == null)
                {
                    if (ViewBag.IsSummary == null)
                    {
                        <h5> @LocalResource.PopupFillingTitle @Model.ServicePeriod </h5>
                    }
                    else
                    {
                        <h5> @LocalResource.PopupFillingTitle @Model.ServiceName</h5>
                    }
                }
                else
                {
                    if (ViewBag.IsSummary == null)
                    {
                        <h5> @LocalResource.ViewFilingForTitle @Model.ServicePeriod </h5>
                    }
                    else
                    {
                        <h5> @LocalResource.ViewFilingForTitle @Model.ServiceName</h5>
                    }
                }

                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">@GlobalResource.Close</span></button>
            </div>
            <div class="ibox-content">
                @*<div class="row form-group">
                        <label class="col-lg-3 control-label">@LocalResource.ApplyTo <span class="text-danger">*</span></label>
                        <div class="col-lg-9 m-t-xs">
                            @Html.RadioButtonFor(x => x.CollectionFillingModel.ApplyToAllYear, true, new { @class = "required", @id = "rdlYear" })
                            <label for="rdlYear" class="font-normal">
                                @LocalResource.AllYear &nbsp;
                            </label>
                            @Html.RadioButtonFor(x => x.CollectionFillingModel.ApplyToAllYear, false, new { @class = "required", @id = "rdlPeriod" })
                            <label for="rdlPeriod" class="font-normal">
                                @LocalResource.ThisPeriod
                            </label>
                            <br />
                            @Html.ValidationMessageFor(x => x.CollectionFillingModel.ApplyToAllYear)
                        </div>
                    </div>*@

                <div class="row form-group">
                    <label class="col-lg-3 control-label">@GlobalResource.FilingDate <span class="text-danger">*</span> </label>
                    <div class="col-lg-3">
                        @Html.TextBox("FillingDate", (Model.FillingDate == null ? null : Model.FillingDate.Value.ToString("d")), new { @class = "form-control fillingDate required textblur", tabindex = 1, @readonly = true })
                        @Html.ValidationMessageFor(x => x.FillingDate)
                        @Html.Hidden("CollectionFillingModel.ApplyToAllYear", true)
                    </div>
                </div>
                <div class="row form-group">
                    <label class="col-lg-3 control-label">
                        @if (Model.ServiceTypeID == 1)
                        {
                            @LocalResource.PrincipalForPeriod
                        }
                        else
                        {
                            @LocalResource.GrossVolumeAmount
                        }
                        <span class="text-danger">*</span> (+)
                    </label>
                    <div class="col-lg-9">
                        @if (Model.FilingFormID == 6) //Liquor license
                        {
                            @Html.TextBoxFor(x => x.CollectionFillingModel.GrossVolume, new { @class = "form-control text-right Currencyinputdecimal calculateLicence", @id = "txtGrossVolume", @Value = (Model.CollectionFillingModel.GrossVolume == 0 ? "0" : Model.CollectionFillingModel.GrossVolume.ToString(Common.DecimalPoints)), ondrop = "return false", onpaste = "return false" })
                        }
                        else
                        {
                            @Html.TextBoxFor(x => x.CollectionFillingModel.GrossVolume, new { @class = "form-control text-right Currencyinputdecimal calculateLicence", @id = "txtGrossVolume", @onchange = "GetExemptionAmount()", @Value = (Model.CollectionFillingModel.GrossVolume == 0 ? "0" : Model.CollectionFillingModel.GrossVolume.ToString(Common.DecimalPoints)), ondrop = "return false", onpaste = "return false" })
                        }
                        @Html.ValidationMessageFor(x => x.CollectionFillingModel.GrossVolume)
                    </div>
                </div>

                @if (Model.FilingFormID == 6) //Liquor license
                {
                    <div class="row form-group">
                        <label class="col-lg-3 control-label">
                            @GlobalResource.Percentage <span class="text-danger">*</span> (%)
                        </label>
                        <div class="col-lg-9">
                            @Html.TextBoxFor(x => x.CollectionFillingModel.PercentageValue, new { @class = "form-control required text-right inputpercentage Currencyinputdecimal calculateLicence", @id = "txtPercentageValue", @Value = (Model.CollectionFillingModel.PercentageValue != null ? Model.CollectionFillingModel.PercentageValue.Value.ToString(Common.DecimalPoints) : null), @datatitle = GlobalResource.Percentage })
                            @Html.ValidationMessageFor(x => x.CollectionFillingModel.PercentageValue)
                        </div>
                    </div>
                }
                else
                {
                    <div class="row form-group">
                        <label class="col-lg-3 control-label">@LocalResource.ExemptionAmount (-) </label>
                        <div class="col-lg-9">
                            @Html.TextBoxFor(x => x.CollectionFillingModel.ExemptionAmount, new { @class = "form-control text-right Currencyinputdecimal calculateLicence", @id = "txtExemptionAmount", @Value = (Model.CollectionFillingModel.ExemptionAmount == null ? "0" : Model.CollectionFillingModel.ExemptionAmount.Value.ToString(Common.DecimalPoints)), @datatitle = LocalResource.ExemptionAmount, @readonly = "readonly" })
                        </div>
                    </div>
                }

                <div class="row form-group">
                    <label class="col-lg-3 control-label">@GlobalResource.Total = </label>
                    <div class="col-lg-9">
                        @Html.TextBoxFor(x => x.CollectionFillingModel.Total, new { @class = "form-control text-right  Currencyinputdecimal", @id = "txtTotal", @Value = (Model.CollectionFillingModel.Total == 0 ? "0" : Model.CollectionFillingModel.Total.ToString(Common.DecimalPoints)), ReadOnly = "true" })
                    </div>
                </div>
                <div class="row form-group hide">
                    <label class="col-lg-3 control-label">@LocalResource.Credits </label>
                    <div class="col-lg-9">
                        <input type="text" class="form-control Currencyinputdecimal text-right" id="txtCredit" value="0" ondrop="return false" onpaste="return false" />
                    </div>
                </div>


                @*Upload File Control*@
                <div class="row form-group">
                    <div class="col-lg-12">
                        <label class="control-label"> @GlobalResource.Documents </label>
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-lg-12">
                        <div id="attachmentDropzone" class="dropzone">
                            <div id="attachmentPreview" class="dropzone-previews">
                            </div>
                        </div>
                    </div>
                </div>



                <div class="row form-group">
                    <label class="col-lg-3 control-label">@GlobalResource.AttachmentsFiles</label>
                    <div class="col-lg-9">
                        <ul class="list-unstyled project-files m-t-sm">
                            @if (Model.CollectionFillingModel.CollectionFillingImagesList.Count > 0)
                            {
                                foreach (var item in Model.CollectionFillingModel.CollectionFillingImagesList)
                                {
                                    string ext = System.IO.Path.GetExtension(item.FileName);
                                    string cssclass = "fa-file";
                                    <li class="text-description-field">
                                        <a href='@Url.Content("~/File/DownloadFile?id=" + item.ImageID)'>
                                            @if ((".xlsx .xls").Contains(ext))
                                            {
                                                cssclass = "fa-file-excel-o";
                                            }
                                            else if (ext.Contains(".pdf"))
                                            {
                                                cssclass = "fa-file-pdf-o";
                                            }
                                            else if ((".docx,.doc").Contains(ext))
                                            {
                                                cssclass = "fa-file-word-o";
                                            }
                                            else if ((".jpg,.jpeg,.gif,.png,.bmp").Contains(ext))
                                            {
                                                cssclass = "fa-file-image-o";
                                            }
                                            else if ((".flv,.wmv,.mp4,.mp3,.mpeg").Contains(ext))
                                            {
                                                cssclass = "fa-file-Video-o";
                                            }
                                            <i class="fa @cssclass m-r-xxs">
                                            </i>
                                            &nbsp;@item.FileName
                                        </a>
                                    </li>
                                }
                            }
                            else
                            {
                                <li>
                                    @GlobalResource.NoDataMessage
                                </li>
                            }
                        </ul>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button id="btnAddLicense" type="button" class="btn btn-primary" onclick="return SaveLicenseEdit();">@GlobalResource.Update</button>
        <button id="btnCancel" type="button" class="btn btn-white closemodal" data-dismiss="modal">@GlobalResource.Cancel</button>
    </div>

    @*Hidden Fields*@
    <input type="hidden" id="AccountServiceCollectionDetailId" name="AccountServiceCollectionDetailId" value="@Model.AccountServiceCollectionDetailId" />
    <input type="hidden" id="GroupID" name="GroupID" value="@Model.GroupID" />
    <input type="hidden" id="RowVersion" name="RowVersion" />
    <input type="hidden" id="ImageIds" name="CollectionFillingModel.CommaSeperatedImageIDs" />
    @Html.HiddenFor(m => m.ExceptionValue)
    @Html.HiddenFor(m => m.PercentageValue)
    @Html.HiddenFor(m => m.RowVersion64)
    @Html.HiddenFor(d => d.CollectionFillingModel.ID)
    @Html.HiddenFor(m => m.FilingFormID)
    @Html.HiddenFor(m => m.ServiceTypeID)
}