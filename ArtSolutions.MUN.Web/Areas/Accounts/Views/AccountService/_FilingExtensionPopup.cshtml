@model ArtSolutions.MUN.Web.Areas.Accounts.Models.AccountServiceExtensionModel
@using ArtSolutions.MUN.Web.Areas.Accounts.Models
@using LocalResource = ArtSolutions.MUN.Web.Resources.AccountService
@using GlobalResource = ArtSolutions.MUN.Web.Resources.Global
@using PaymentPlanResource = ArtSolutions.MUN.Web.Resources.PaymentPlan


@{
    Layout = null;
    var isViewMode = ViewBag.IsViewMode;
}

@using (Ajax.BeginForm("FilingExtensionSave", "AccountService", new AjaxOptions { HttpMethod = "POST", OnSuccess = "FillingSuccessCallback(data)" }, new { role = "form", id = "frmFillingExtension", @class = "form-horizontal", data_ajax_mode = "replace-with" }))
{

    <div class="modal-body no-padding">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5> @LocalResource.Extension </h5>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">@GlobalResource.Close</span></button>
            </div>
            <div class="ibox-content">
                <div class="row form-group">
                    <label class="col-lg-3 control-label">@PaymentPlanResource.NoOfMonths <span class="text-danger">*</span></label>
                    <div class="col-lg-3 m-t-xs">
                        @Html.TextBoxFor(x => x.Months, new { @class = "form-control inputnumber required", @onchange = "changeExtensionEndDate(this.value);" })
                        @Html.ValidationMessageFor(x => x.Months)
                    </div>
                    <div class="col-lg-6 m-t-xs"> </div>
                </div>
                <div class="row form-group">
                    <label class="col-lg-3 control-label">@GlobalResource.StartDate</label>
                    <div class="col-lg-3">
                        @Html.TextBox("StartDate", Model.StartDate.ToString("d"), new { @class = "form-control", @ReadOnly = true })
                    </div>
                </div>
                <div class="row form-group">
                    <label class="col-lg-3 control-label">@GlobalResource.EndDate</label>
                    <div class="col-lg-3">
                        @Html.TextBox("EndDate", Model.EndDate.ToString("d"), new { @class = "form-control", @ReadOnly = true })
                    </div>
                </div>
                <div class="row form-group">
                    <label class="col-lg-3 control-label">@LocalResource.GrossVolumeAmount <span class="text-danger">*</span> (+) </label>
                    <div class="col-lg-9">
                        @Html.TextBoxFor(x => x.GrossVolume, new { @class = "form-control text-right inputdecimal calculate required", @id = "txtGrossVolume", @Value = (Model.GrossVolume == 0 ? "0" : Model.GrossVolume.ToString(Common.DecimalPoints)) })
                        @Html.ValidationMessageFor(x => x.GrossVolume)
                    </div>
                </div>
                <div class="row form-group">
                    <label class="col-lg-3 control-label">@LocalResource.ExemptionAmount (-) </label>
                    <div class="col-lg-9">
                        @Html.TextBoxFor(x => x.ExemptionAmount, new { @class = "form-control text-right inputdecimal calculate", @id = "txtExemptionAmount", @Value = (Model.ExemptionAmount == null ? "0" : Model.ExemptionAmount.Value.ToString(Common.DecimalPoints)), @datatitle = LocalResource.ExemptionAmount })
                    </div>
                </div>
                <div class="row form-group">
                    <label class="col-lg-3 control-label">@GlobalResource.Total = </label>
                    <div class="col-lg-9">
                        @Html.TextBoxFor(x => x.Total, new { @class = "form-control text-right  inputdecimal required", @id = "txtTotal", @Value = (Model.Total == 0 ? "0" : Model.Total.ToString(Common.DecimalPoints)), ReadOnly = "true" })
                        @Html.ValidationMessageFor(x => x.Total)
                    </div>
                </div>
                <div class="row form-group">
                    <label class="col-lg-3 control-label">@LocalResource.Credits </label>
                    <div class="col-lg-9">
                        <input type="text" class="form-control inputdecimal text-right" id="txtCredit" value="0" />
                    </div>
                </div>
                @if (isViewMode == null)
                {
                    @*Upload File Control*@
                    <div class="row form-group">
                        <label class="control-label col-lg-3"> @GlobalResource.Documents </label>
                        <div class="col-lg-9">
                            <div id="attachmentDropzone" class="dropzone">
                                <div id="attachmentPreview" class="dropzone-previews">
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @if (isViewMode != null)
                {
                    <div class="row form-group">
                        <label class="col-lg-3 control-label">@GlobalResource.AttachmentsFiles</label>
                        <div class="col-lg-9">
                            <ul class="list-unstyled project-files m-t-sm">
                                @if (Model.ImageID > 0)
                                {
                                    string ext = System.IO.Path.GetExtension(Model.FileName);
                                    string cssclass = "fa-file";

                                    <li class="text-description-field">
                                        <a href='@Url.Content("~/File/DownloadFile?id=" + Model.ImageID)'>
                                            @if ((".xlsx .xls").Contains(ext))
                                            {
                                                cssclass = "fa-file-excel-o";
                                            }
                                            else if (ext.Contains(".pdf"))
                                            {
                                                cssclass = "fa-file-pdf-o";
                                            }
                                            else if ((".docx,.doc").Contains(ext))
                                            {
                                                cssclass = "fa-file-word-o";
                                            }
                                            else if ((".jpg,.jpeg,.gif,.png,.bmp").Contains(ext))
                                            {
                                                cssclass = "fa-file-image-o";
                                            }
                                            else if ((".flv,.wmv,.mp4,.mp3,.mpeg").Contains(ext))
                                            {
                                                cssclass = "fa-file-Video-o";
                                            }
                                            <i class="fa @cssclass m-r-xxs">
                                            </i>
                                            &nbsp;@Model.FileName
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li>
                                        @GlobalResource.NoDataMessage
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="modal-footer">
        @if (isViewMode == null)
        {
            <button id="btnAddLicense" type="submit" class="btn btn-primary" onclick="return SaveExtension();">@GlobalResource.Add</button>
        }
        <button id="btnCancel" type="button" class="btn btn-white closemodal" data-dismiss="modal">@GlobalResource.Cancel</button>
    </div>

    @*Hidden Fields*@
    <input type="hidden" id="AccountServiceID" name="AccountServiceID" value="@Model.AccountServiceID" />
    <input type="hidden" id="ImageID" name="ImageID" />
}
