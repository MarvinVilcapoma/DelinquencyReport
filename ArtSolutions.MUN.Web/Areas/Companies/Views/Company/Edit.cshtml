@model ArtSolutions.MUN.Web.Areas.Companies.Models.CompanyModel
@using LocalResource = ArtSolutions.MUN.Web.Resources.Company
@using GlobalResource = ArtSolutions.MUN.Web.Resources.Global
@using CompanyResource = ArtSolutions.MUN.Web.Resources.Account

@{
    ViewBag.Title = LocalResource.EditTitle;
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>@GlobalResource.Company</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home", new { area = "" })">@GlobalResource.Home</a>
            </li>
            <li class="active">
                <strong>@ViewBag.Title</strong>
            </li>
        </ol>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="wrapper wrapper-content animated fadeInUp">
            <div class="ibox" id="divCompanyDetails">
                @using (Ajax.BeginForm("Edit", "Company", new AjaxOptions
                {
                    HttpMethod = "POST",
                    OnSuccess = "OnSuccessCallback(data)"
                }, new { role = "form", id = "frmCompany" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(model => model.ID)
                    @Html.HiddenFor(model => model.RowVersion)
                    @Html.HiddenFor(model => model.CompanyParameter.ID)
                    <div class="ibox-title ibox-title-with-button">
                        <h5>@ViewBag.Title</h5>
                        <div class="ibox-tools">
                            <button class="btn btn-primary " type="submit" id="btnSave" tabindex="10">@GlobalResource.Save </button>
                            <button class="btn btn-white" type="button" onclick="location.href='@Url.Content("~/Home/Index")'" tabindex="11">@GlobalResource.Cancel</button>
                        </div>
                    </div>
                    <div class="ibox-content">
                        <div class="row form-group">
                            <div class="col-lg-4 text-right">
                                <label class="control-label text-right"> @LocalResource.CompanyCode <span class="text-danger">*</span> </label>
                            </div>
                            <div class="col-lg-4 ">
                                @Html.TextBoxFor(x => x.Code, new { @class = "form-control required", @id = "txtCode", @maxLength = 5, tabindex = 1, @autofocus = "autofocus" })
                                @Html.ValidationMessageFor(x => x.Code)
                            </div>
                            <div class="col-lg-4"></div>
                        </div>
                        <div class="row form-group">
                            <div class="col-lg-4 text-right">
                                <label class="control-label text-right"> @LocalResource.NoOfDecimalPointsAllowed <span class="text-danger">*</span> </label>
                            </div>
                            <div class="col-lg-4 ">
                                @Html.TextBoxFor(x => x.CompanyParameter.Precision, new { @class = "form-control text-right inputdecimal required", id = "txtPrecision", maxlength = 5, tabindex = 2 })
                                @Html.ValidationMessageFor(x => x.CompanyParameter.Precision)
                            </div>
                            <div class="col-lg-4"></div>
                        </div>
                        <div class="row form-group">
                            <div class="col-lg-4 text-right">
                                <label class="control-label text-right"> @LocalResource.UseLeapYear </label>
                            </div>
                            <div class="col-lg-4 ">
                                @Html.CheckBoxFor(x => x.CompanyParameter.UseLeapYear, new { id = "chkUseLeapYear", tabindex = 3 })
                            </div>
                            <div class="col-lg-4"></div>
                        </div>
                        <div class="row form-group">
                            <div class="col-lg-4 text-right">
                                <label class="control-label text-right"> @LocalResource.UseAccountReceivableJournal </label>
                            </div>
                            <div class="col-lg-4 ">
                                @Html.CheckBoxFor(x => x.CompanyParameter.UseAccountReceivableJournal, new { id = "chkUseAccountReceivableJournal", tabindex = 3 })
                            </div>
                            <div class="col-lg-4"></div>
                        </div>
                    </div>
                    <div class="ibox-title ibox-title-with-button">
                        <h5>@GlobalResource.AddressDetail</h5>
                    </div>
                    <div class="ibox-content">
                        <div class="row m-l-sm m-r-sm">
                            <div class="clearfix"></div>
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="col-sm-3 col-md-4 text-right control-label">@CompanyResource.AddressLine1 <span class="text-danger">*</span></label>
                                        <div class="col-sm-9 col-md-8 form-group">
                                            @Html.TextBoxFor(model => model.Address1, new { @class = "form-control", tabindex = 4, maxlength = 250 })
                                            @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="col-sm-3 col-md-4 text-right control-label">@CompanyResource.AddressLine2 <span class="text-danger">*</span></label>
                                        <div class="col-sm-9 col-md-8 form-group">
                                            @Html.TextBoxFor(model => model.Address2, new { @class = "form-control", tabindex = 5, maxlength = 250 })
                                            @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="col-sm-3 col-md-4 text-right control-label">@GlobalResource.Country <span class="text-danger">*</span></label>
                                        <div class="col-sm-9 col-md-8 form-group">
                                            @Html.DropDownListFor(m => m.CompnayCountryID, Model.CountryList, GlobalResource.DropDownSelectMessage, new { @id = "CompnayCountryID", @class = "form-control required select2dropdown", tabindex = 6 })
                                            @Html.ValidationMessageFor(model => model.CompnayCountryID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="col-sm-3 col-md-4 text-right control-label">@CompanyResource.State <span class="text-danger">*</span></label>
                                        <div class="col-sm-9 col-md-8 form-group">
                                            @Html.DropDownListFor(model => model.CountryStateID, new List<SelectListItem> { new SelectListItem() { Text = GlobalResource.DropDownSelectMessage, Value = "" } }, new { @class = "form-control required select2dropdown", tabindex = 7 })
                                            @Html.ValidationMessageFor(model => model.CountryStateID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="col-sm-3 col-md-4 text-right control-label">@CompanyResource.City <span class="text-danger">*</span></label>
                                        <div class="col-sm-9 col-md-8 form-group">
                                            @Html.TextBoxFor(model => model.City, new { @class = "form-control", tabindex = 8, maxlength = 250 })
                                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="col-sm-3 col-md-4 text-right control-label">@CompanyResource.ZipCode <span class="text-danger">*</span></label>
                                        <div class="col-sm-9 col-md-8 form-group">
                                            @Html.TextBoxFor(model => model.ZipPostalCode, new { @class = "form-control", tabindex = 9, maxlength = 20 })
                                            @Html.ValidationMessageFor(model => model.ZipPostalCode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="ibox-title ibox-title-with-button">
                        <h5>@GlobalResource.CompanyLogo</h5>
                    </div>
                    <div class="ibox-content">
                        <div class="row m-l-sm m-r-sm">
                            <div class="clearfix"></div>
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="form-group">
                                        @Html.HiddenFor(m => m.LogoID)
                                        <label class="col-sm-6 hidden text-center warning" id="lblUploadError"> </label>
                                        <div id="companylogoDropzone" class="dropzone" tabindex="5">
                                            <div id="companylogoPreview" class="dropzone-previews">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    //Hidden Fields
                    @Html.HiddenFor(x => x.Name)
                    @Html.HiddenFor(x => x.LegalName)
                    @Html.HiddenFor(x => x.WorkPhone)
                    @Html.HiddenFor(x => x.URL)
                    @Html.HiddenFor(x => x.Email)
                    @Html.HiddenFor(x => x.LogoID)
                    @Html.HiddenFor(x => x.CountryID)
                    @Html.HiddenFor(x => x.CompanySize)
                    @Html.HiddenFor(x => x.IsAgreedTerms)
                    @Html.HiddenFor(x => x.AgreeTermsOnDate)
                    @Html.HiddenFor(x => x.TermsDetails)
                    @Html.HiddenFor(x => x.IsSystem)
                    @Html.HiddenFor(x => x.IsDeleted)
                    @Html.HiddenFor(x => x.IsActive)
                    @Html.HiddenFor(x => x.MUNAccountAddressesID)
                }
            </div>
        </div>
    </div>
</div>
@section Styles{
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/Content/plugins/dropzone/dropZoneStyles")
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/select2")
    @Scripts.Render("~/plugins/dropZone")

    <script type="text/javascript">
        var fileUploadDefaultMessage = '@GlobalResource.UploadfileInitialMessage';
        Dropzone.autoDiscover = false;
        var userPictureUpload;
        var companylogoUpload;
        var userPictureId = 0;
        var companylogoUploadId = 0;
        var numSuccess = 0;
        var DropDownSelectMessage = '@GlobalResource.DropDownSelectMessage';
        $(document).ready(function () {
            $(".select2dropdown").select2({ width: '100%' });

            $(document).on('select2:select', "#CompnayCountryID", function () {
                    getStates($(this).val(), 'CountryStateID', '');
            });
            if (parseInt('@Model.CompnayCountryID') > 0) {
                getStates($("#CompnayCountryID").val(), 'CountryStateID', '@Model.CountryStateID');
            }

            if ($("#LogoID").val()) {
                companylogoUploadId = $("#LogoID").val();
            }
          var isDirty = 0;
          var maxFileLimit = 2 * 1024 * 1024;
           $('#companylogoDropzone').dropzone({
               url: '@Url.Content("~/File/UploadFile")',
                autoProcessQueue: true,
                addRemoveLinks: true,
                parallelUploads: 1000,
                uploadMultiple: false,
                acceptedFiles: '@Common.AllowedLogoFileTypesToUpload',
                maxFiles: 1,
                dictDefaultMessage: fileUploadDefaultMessage,
                maxFilesize: '@Common.MaxFileLengthToUpload',
                init: function () {
                    companylogoUpload = this;

                    var companylogoUrl = '@Common.FileURL' + companylogoUploadId;

                    if (parseInt(companylogoUploadId) > 0) {
                        //File display during edit
                        var mockFile = {
                            status: Dropzone.ADDED,
                            url: companylogoUrl
                        };
                        companylogoUpload.emit("addedfile", mockFile);
                        companylogoUpload.emit("thumbnail", mockFile, companylogoUrl);
                        companylogoUpload.files.push(mockFile);
                    }

                    this.on("addedfile", function () {
                        //  Allow maxFiles = 1
                        isDirty = 0;
                        if (this.files[1] != null) {
                            this.removeFile(this.files[1]);
                            showAlert("warning", '@GlobalResource.Uploadedfilelimitmessage');
                            isDirty = 1;
                            return false;
                        }
                        // Check for file type
                        if (this.files[0] !== null) {
                            var type = this.files[0].type;
                            if (type != 'image/jpg' && type != 'image/jpeg' && type != 'image/png') {
                                showAlert("warning", '@GlobalResource.Uploadedfiletypemessage');
                                isDirty = 1;
                                this.removeFile(this.files[0]);
                                isDirty = 1;
                                return false;
                            }
                        }

                        if (this.files[0] !== null) {
                            if (this.files[0].size > maxFileLimit) {
                                showAlert("warning", '@GlobalResource.Uploadedfilemaxsizemessage');
                                this.removeFile(this.files[0]);
                                isDirty = 1;
                                return false;
                            }
                        }
                        if (isDirty == 0)
                            $("#lblUploadError").html("").hide();
                       
                    });
                    this.on("removedfile", function (file) {
                        companylogoUploadId = 0;
                        isPictureRemoved = true;
                        $('#LogoID').val(companylogoUploadId);
                    });
                },
                error: function (file, response) {
                    file.previewElement.classList.add("dz-error");
                },
                sending: function (file, xhr, data) {
                    data.append("id", companylogoUploadId);
                },
                success: function (file, response) {
                    companylogoUploadId = response.id;
                    numSuccess++;
                    $('#LogoID').val(companylogoUploadId);
                }
            });
        });        

        function getStates(id, stateobj, selectedvalue) {
            if (id != "") {
                $.ajax({
                    type: "GET",
                    url: '@Url.Content("~/Company/GetStates")',
                    data: { countryId: id },
                    success: function (data) {
                        if (selectedvalue == undefined || selectedvalue == null || selectedvalue == "0") selectedvalue = '0';
                        $('#' + stateobj).html('');
                        $('#' + stateobj).append('<option value="">' + DropDownSelectMessage + '</option>');
                        if (data != null) {
                            $.each(data, function (index, item) {
                                $('#' + stateobj).append('<option value="' + item.Value + '">' + item.Text + '</option>');
                            });
                        }
                        $('#' + stateobj).select2({ width: '100%' })
                        $('#' + stateobj).val(selectedvalue).trigger('change');

                    }, error: function () { }
                }).always(function () {
                });
            }
            else
            {
                $('#' + stateobj).html('');
                $('#' + stateobj).append('<option value="">' + DropDownSelectMessage + '</option>');
                $('#' + stateobj).select2({ width: '100%' })
                $('#' + stateobj).val(selectedvalue).trigger('change');
            }
        }

        $(document).ready(function () {
            $("#txtCode").keyup(function () { return false });
            $("#txtCode").blur(function () { return false });
        });

        function OnSuccessCallback(response) {
            if (response.status) {
                window.location.href = response.redirectURL;
            }
            else {
                showAlert("error", response.message);
            }
        }
    </script>
}
